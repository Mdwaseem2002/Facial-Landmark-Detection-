{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chatbot-tester\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Chatbot Response Evaluation\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"response-container\"\n};\nconst _hoisted_4 = {\n  class: \"response\"\n};\nconst _hoisted_5 = {\n  class: \"evaluation\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Accuracy:\", -1 /* HOISTED */));\nconst _hoisted_7 = [\"onUpdate:modelValue\"];\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"accurate\"\n}, \"Accurate\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"inaccurate\"\n}, \"Inaccurate\", -1 /* HOISTED */));\nconst _hoisted_10 = [_hoisted_8, _hoisted_9];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.responses, (response, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"response-item\",\n      key: index\n    }, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString(response.text), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": $event => response.accuracy = $event\n    }, [..._hoisted_10], 8 /* PROPS */, _hoisted_7), [[_vModelSelect, response.accuracy]])])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.submitEvaluation && $options.submitEvaluation(...args))\n  }, \"Submit Evaluation\")]);\n}","map":{"version":3,"names":["class","_createElementVNode","value","_hoisted_8","_hoisted_9","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","responses","response","index","key","_hoisted_4","_toDisplayString","text","_hoisted_5","_hoisted_6","$event","accuracy","_hoisted_10","_hoisted_7","onClick","_cache","args","$options","submitEvaluation"],"sources":["/home/waseem/project/client-/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"chatbot-tester\">\n    <h2>Chatbot Response Evaluation</h2>\n    <div class=\"response-container\">\n      <div class=\"response-item\" v-for=\"(response, index) in responses\" :key=\"index\">\n        <div class=\"response\">{{ response.text }}</div>\n        <div class=\"evaluation\">\n          <label>Accuracy:</label>\n          <select v-model=\"response.accuracy\">\n            <option value=\"accurate\">Accurate</option>\n            <option value=\"inaccurate\">Inaccurate</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <button @click=\"submitEvaluation\">Submit Evaluation</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ChatbotTester',\n  data() {\n    return {\n      responses: [\n        { text: 'Sample response 1', accuracy: null },\n        { text: 'Sample response 2', accuracy: null },\n        { text: 'Sample response 3', accuracy: null }\n      ]\n    };\n  },\n  methods: {\n    submitEvaluation() {\n      // Logic to submit evaluations to backend\n      console.log('Evaluations submitted:', this.responses);\n      alert('Evaluations submitted successfully!');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chatbot-tester {\n  padding: 20px;\n  background-color: #f5f5f5;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.response-container {\n  margin-top: 20px;\n}\n\n.response-item {\n  margin-bottom: 10px;\n}\n\n.response {\n  font-weight: bold;\n}\n\n.evaluation select {\n  margin-left: 10px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAoC,YAAhC,6BAA2B;;EAC1BD,KAAK,EAAC;AAAoB;;EAEtBA,KAAK,EAAC;AAAU;;EAChBA,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAAwB,eAAjB,WAAS;mBAP1B;gEASYA,mBAAA,CAA0C;EAAlCC,KAAK,EAAC;AAAU,GAAC,UAAQ;gEACjCD,mBAAA,CAA8C;EAAtCC,KAAK,EAAC;AAAY,GAAC,YAAU;qBADrCC,UAA0C,EAC1CC,UAA8C,C;;uBATxDC,mBAAA,CAeM,OAfNC,UAeM,GAdJC,UAAoC,EACpCN,mBAAA,CAWM,OAXNO,UAWM,I,kBAVJH,mBAAA,CASMI,SAAA,QAbZC,WAAA,CAI6DC,KAAA,CAAAC,SAAS,EAJtE,CAIyCC,QAAQ,EAAEC,KAAK;yBAAlDT,mBAAA,CASM;MATDL,KAAK,EAAC,eAAe;MAAyCe,GAAG,EAAED;QACtEb,mBAAA,CAA+C,OAA/Ce,UAA+C,EAAAC,gBAAA,CAAtBJ,QAAQ,CAACK,IAAI,kBACtCjB,mBAAA,CAMM,OANNkB,UAMM,GALJC,UAAwB,E,gBACxBnB,mBAAA,CAGS;MAXnB,uBAAAoB,MAAA,IAQ2BR,QAAQ,CAACS,QAAQ,GAAAD;OAR5C,IAAAE,WAAA,kBAAAC,UAAA,I,gBAQ2BX,QAAQ,CAACS,QAAQ,E;oCAOxCrB,mBAAA,CAA4D;IAAnDwB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;KAAE,mBAAiB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}