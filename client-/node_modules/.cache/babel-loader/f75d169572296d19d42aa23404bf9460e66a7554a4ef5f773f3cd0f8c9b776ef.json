{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Your template content here \")]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createCommentVNode"],"sources":["/home/waseem/experiments/waseem-example-fullstack/client-/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- Your template content here -->\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    async detectFacialLandmarks() {\n      if (!this.file) {\n        alert('Please select an image file.');\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('file', this.file);\n\n      try {\n        const response = await fetch('/', {\n          method: 'POST',\n          body: formData\n        });\n\n        if (!response.ok) {\n          throw new Error(`Server returned ${response.status} ${response.statusText}`);\n        }\n\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n          throw new Error('Invalid response format (not JSON)');\n        }\n\n        const data = await response.json();\n        this.landmarks = data.landmarks;\n      } catch (error) {\n        console.error('Error detecting facial landmarks:', error);\n        alert('An error occurred while detecting facial landmarks.');\n      }\n    }\n  }\n};\n</script>\n\n<style>\n/* Your CSS styles here */\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;uBAAbC,mBAAA,CAEM,OAFNC,UAEM,GADJC,mBAAA,gCAAmC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}