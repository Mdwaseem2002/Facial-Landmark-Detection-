{"ast":null,"code":"import HelloWorld from './App.vue'; // Import HelloWorld.vue\n\nexport default {\n  components: {\n    HelloWorld // Register HelloWorld component\n  },\n  data() {\n    return {\n      status: null,\n      result: null,\n      ageEstimation: null,\n      imageFile: null,\n      uploadedImage: null\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.status = null;\n      this.result = null;\n      this.ageEstimation = null;\n      this.uploadedImage = null;\n      const input = event.target;\n      const file = input.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.uploadedImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n        this.imageFile = file;\n      }\n    },\n    async uploadImage() {\n      if (!this.imageFile) {\n        this.status = \"Please select an image file.\";\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"uploadedImage\", this.uploadedImage); // Use the correct key for image data\n\n      try {\n        const uploadResponse = await fetch(\" http://127.0.0.1:5000/process_image\", {\n          method: \"POST\",\n          body: formData\n        });\n        if (uploadResponse.ok) {\n          this.status = \"Image upload successful!\";\n          await this.fetchResultImage(); // Automatically fetch result after successful upload\n        } else {\n          const errorData = await uploadResponse.json();\n          this.status = 'Error uploading image: ${errorData.message}';\n        }\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        this.status = \"Image upload failed. Please try again.\";\n      }\n    },\n    async fetchResultImage() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/get_processed_image\");\n        if (response.ok) {\n          const resultData = await response.json();\n          this.result = resultData.result;\n          this.fetchAgeEstimation(); // Fetch age estimation along with result\n        } else {\n          this.status = \"Error fetching result image.\";\n        }\n      } catch (error) {\n        console.error(\"Error fetching result image:\", error);\n        this.status = \"Error fetching result image. Please try again.\";\n      }\n    },\n    async fetchAgeEstimation() {\n      try {\n        const ageResponse = await fetch(\" http://localhost:5000/age\");\n        if (ageResponse.ok) {\n          const ageData = await ageResponse.json();\n          this.ageEstimation = ageData.age;\n        } else {\n          this.status = \"Error fetching age estimation.\";\n        }\n      } catch (error) {\n        console.error(\"Error fetching age estimation:\", error);\n        this.status = \"Error fetching age estimation. Please try again.\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["HelloWorld","components","data","status","result","ageEstimation","imageFile","uploadedImage","methods","handleImageUpload","event","input","target","file","files","reader","FileReader","onload","e","readAsDataURL","uploadImage","formData","FormData","append","uploadResponse","fetch","method","body","ok","fetchResultImage","errorData","json","error","console","response","resultData","fetchAgeEstimation","ageResponse","ageData","age"],"sources":["/home/waseem/experiments/waseem-example-fullstack/client-/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"facial-landmark-detection\" class=\"center\">\n    <header>\n      <h1>Facial Landmark Detection</h1>\n    </header>\n\n    <main>\n      <table>\n        <tr>\n          <td>\n            <input type=\"file\" accept=\".jpg\" @change=\"handleImageUpload\" />\n          </td>\n          <td>\n            <button @click=\"uploadImage\">Upload</button>\n          </td>\n          <td>\n            <button @click=\"fetchResultImage\" :disabled=\"!result\">\n              Fetch Result\n            </button>\n          </td>\n        </tr>\n      </table>\n\n      <div v-if=\"status !== null\" class=\"status\">\n        {{ status }}\n      </div>\n\n      <canvas v-if=\"result\" ref=\"outputCanvas\" width=\"600\" height=\"400\"></canvas>\n\n      <div v-if=\"result\" class=\"result-image-container\">\n        <img :src=\"result\" alt=\"Result Image\" />\n        <div class=\"age-estimation\" v-if=\"ageEstimation !== null\">\n          Age Estimation: {{ ageEstimation }}\n        </div>\n      </div>\n\n      <!-- Include HelloWorld.vue component -->\n      <HelloWorld />\n    </main>\n\n    <footer>\n      <p>&copy; 2024 Facial Landmark Detection</p>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport HelloWorld from './App.vue'; // Import HelloWorld.vue\n\nexport default {\n  components: {\n    HelloWorld, // Register HelloWorld component\n  },\n  data() {\n    return {\n      status: null,\n      result: null,\n      ageEstimation: null,\n      imageFile: null,\n      uploadedImage: null,\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.status = null;\n      this.result = null;\n      this.ageEstimation = null;\n      this.uploadedImage = null;\n\n      const input = event.target;\n      const file = input.files[0];\n\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.uploadedImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n        this.imageFile = file;\n      }\n    },\n    async uploadImage() {\n      if (!this.imageFile) {\n        this.status = \"Please select an image file.\";\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append(\"uploadedImage\", this.uploadedImage); // Use the correct key for image data\n\n      try {\n        const uploadResponse = await fetch(\" http://127.0.0.1:5000/process_image\", {\n          method: \"POST\",\n          body: formData,\n        });\n        if (uploadResponse.ok) {\n          this.status = \"Image upload successful!\";\n          await this.fetchResultImage(); // Automatically fetch result after successful upload\n        } else {\n          const errorData = await uploadResponse.json();\n          this.status = 'Error uploading image: ${errorData.message}';\n        }\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        this.status = \"Image upload failed. Please try again.\";\n      }\n    },\n    async fetchResultImage() {\n        try {\n          const response = await fetch(\"http://127.0.0.1:5000/get_processed_image\");\n          if (response.ok) {\n            const resultData = await response.json();\n            this.result = resultData.result;\n            this.fetchAgeEstimation(); // Fetch age estimation along with result\n          } else {\n            this.status = \"Error fetching result image.\";\n          }\n        } catch (error) {\n          console.error(\"Error fetching result image:\", error);\n          this.status = \"Error fetching result image. Please try again.\";\n        }\n      },\n      async fetchAgeEstimation() {\n        try {\n          const ageResponse = await fetch(\" http://localhost:5000/age\");\n          if (ageResponse.ok) {\n            const ageData = await ageResponse.json();\n            this.ageEstimation = ageData.age;\n          } else {\n            this.status = \"Error fetching age estimation.\";\n          }\n        } catch (error) {\n          console.error(\"Error fetching age estimation:\", error);\n          this.status = \"Error fetching age estimation. Please try again.\";\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style>\n  /* Add your CSS styling here */\n  body, html {\n    height: 100%;\n    margin: 0;\n  }\n  \n  #facial-landmark-detection {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n  }\n  \n  header {\n    background-color: #333;\n    color: #fff;\n    text-align: center;\n    padding: 10px;\n  }\n  \n  footer {\n    background-color: #333;\n    color: #fff;\n    text-align: center;\n    padding: 10px;\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n  }\n  \n  main {\n    margin: 20px;\n  }\n  \n  table {\n    margin-bottom: 20px;\n  }\n  \n  .status {\n    margin-top: 10px;\n    padding: 10px;\n    border: 1px solid #ccc;\n    background-color: #f0f0f0;\n  }\n  \n  .result-image-container {\n    margin-top: 20px;\n    text-align: center;\n  }\n  \n  .result-image-container img {\n    max-width: 100%;\n    height: auto;\n  }\n  \n  .age-estimation {\n    margin-top: 10px;\n    padding: 10px;\n    border: 1px solid #ccc;\n    background-color: #f0f0f0;\n  }\n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}