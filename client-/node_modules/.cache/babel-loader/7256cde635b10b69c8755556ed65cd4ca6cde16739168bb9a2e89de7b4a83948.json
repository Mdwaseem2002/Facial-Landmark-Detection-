{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileChange && $options.handleFileChange(...args)),\n    accept: \".jpg, .jpeg, .png\"\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.uploadFile && $options.uploadFile(...args))\n  }, \"Upload\"), _ctx.uploadedImage ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: _ctx.uploadedImage,\n    alt: \"Uploaded Image\"\n  }, null, 8 /* PROPS */, _hoisted_1)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.detectFacialLandmarks && $options.detectFacialLandmarks(...args))\n  }, \"Detect\"), $data.detectedImage ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 1,\n    src: $data.detectedImage,\n    alt: \"Detected Image\"\n  }, null, 8 /* PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","type","onChange","_cache","args","$options","handleFileChange","accept","onClick","uploadFile","_ctx","uploadedImage","key","src","alt","_hoisted_1","_createCommentVNode","detectFacialLandmarks","$data","detectedImage","_hoisted_2"],"sources":["/home/waseem/project/client-/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"file\" @change=\"handleFileChange\" accept=\".jpg, .jpeg, .png\" />\n    <button @click=\"uploadFile\">Upload</button>\n    <img v-if=\"uploadedImage\" :src=\"uploadedImage\" alt=\"Uploaded Image\" />\n    <button @click=\"detectFacialLandmarks\">Detect</button>\n    <img v-if=\"detectedImage\" :src=\"detectedImage\" alt=\"Detected Image\" />\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      file: null,\n      detectedImage: null,\n    };\n  },\n  methods: {\n    handleFileChange(event) {\n      this.file = event.target.files[0];\n    },\n    async uploadFile() {\n      if (!this.file) {\n        alert(\"Please select a file to upload.\");\n        return;\n      }\n\n      const reader = new FileReader();\n\n      reader.onload = async () => {\n        const base64String = reader.result.split(',')[1]; // Extract base64 string\n\n        try {\n          const response = await fetch(\"http://127.0.0.1:5000/process_image\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ image: base64String }), // Send base64 string in JSON format\n          });\n          \n          if (response.ok) {\n            alert(\"File uploaded successfully!\");\n          } else {\n            alert(\"Failed to upload file.\");\n          }\n        } catch (error) {\n          console.error(\"Error uploading file:\", error);\n          alert(\"An error occurred while uploading the file.\");\n        }\n      };\n\n      reader.readAsDataURL(this.file); // Read the file as Data URL\n    },\n    async detectFacialLandmarks() {\n  try {\n    const response = await fetch(\"http://127.0.0.1:5000/get_processed_image\", {\n      method: \"GET\", \n    });\n\n    if (response.ok) {\n      const blob = await response.blob(); // Get the image data as Blob\n\n      // Create a Blob URL for the image\n      const imageUrl = URL.createObjectURL(blob);\n\n      // Display the image\n      this.detectedImage = imageUrl;\n      \n      alert(\"Facial landmarks detected successfully!\");\n    } else {\n      alert(\"Failed to detect facial landmarks.\");\n    }\n  } catch (error) {\n    console.error(\"Error detecting facial landmarks:\", error);\n    alert(\"An error occurred while detecting facial landmarks.\");\n  }\n},\n\n\n  },\n};\n</script>\n\n<style scoped>\n/* Add your scoped CSS styling here */\n</style>\n"],"mappings":";;mBAAA;mBAAA;;uBACEA,mBAAA,CAMM,cALJC,mBAAA,CAA2E;IAApEC,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;IAAEG,MAAM,EAAC;qCACrDP,mBAAA,CAA2C;IAAlCQ,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAI,UAAA,IAAAJ,QAAA,CAAAI,UAAA,IAAAL,IAAA,CAAU;KAAE,QAAM,GACvBM,IAAA,CAAAC,aAAa,I,cAAxBZ,mBAAA,CAAsE;IAJ1Ea,GAAA;IAI+BC,GAAG,EAAEH,IAAA,CAAAC,aAAa;IAAEG,GAAG,EAAC;0BAJvDC,UAAA,KAAAC,mBAAA,gBAKIhB,mBAAA,CAAsD;IAA7CQ,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAY,qBAAA,IAAAZ,QAAA,CAAAY,qBAAA,IAAAb,IAAA,CAAqB;KAAE,QAAM,GAClCc,KAAA,CAAAC,aAAa,I,cAAxBpB,mBAAA,CAAsE;IAN1Ea,GAAA;IAM+BC,GAAG,EAAEK,KAAA,CAAAC,aAAa;IAAEL,GAAG,EAAC;0BANvDM,UAAA,KAAAJ,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}