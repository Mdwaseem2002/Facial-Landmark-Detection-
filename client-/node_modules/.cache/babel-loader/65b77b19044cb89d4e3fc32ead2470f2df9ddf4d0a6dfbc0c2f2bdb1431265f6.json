{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  data() {\n    return {\n      file: null,\n      detectedImage: null\n    };\n  },\n  methods: {\n    handleFileChange(event) {\n      this.file = event.target.files[0];\n    },\n    async uploadFile() {\n      if (!this.file) {\n        alert(\"Please select a file to upload.\");\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const base64String = reader.result.split(',')[1]; // Extract base64 string\n\n        try {\n          const response = await fetch(\"http://127.0.0.1:5000/process_image\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              image: base64String\n            }) // Send base64 string in JSON format\n          });\n          if (response.ok) {\n            alert(\"File uploaded successfully!\");\n          } else {\n            alert(\"Failed to upload file.\");\n          }\n        } catch (error) {\n          console.error(\"Error uploading file:\", error);\n          alert(\"An error occurred while uploading the file.\");\n        }\n      };\n      reader.readAsDataURL(this.file); // Read the file as Data URL\n    },\n    async detectFacialLandmarks() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/get_processed_image\", {\n          method: \"GET\"\n        });\n        if (response.ok) {\n          const blob = await response.blob(); // Get the image data as Blob\n\n          // Create a Blob URL for the image\n          const imageUrl = URL.createObjectURL(blob);\n\n          // Display the image\n          this.detectedImage = imageUrl;\n          alert(\"Facial landmarks detected successfully!\");\n        } else {\n          alert(\"Failed to detect facial landmarks.\");\n        }\n      } catch (error) {\n        console.error(\"Error detecting facial landmarks:\", error);\n        alert(\"An error occurred while detecting facial landmarks.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","file","detectedImage","methods","handleFileChange","event","target","files","uploadFile","alert","reader","FileReader","onload","base64String","result","split","response","fetch","method","headers","body","JSON","stringify","image","ok","error","console","readAsDataURL","detectFacialLandmarks","blob","imageUrl","URL","createObjectURL"],"sources":["/home/waseem/project/client-/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"file\" @change=\"handleFileChange\" accept=\".jpg, .jpeg, .png\" />\n    <button @click=\"uploadFile\">Upload</button>\n    <img v-if=\"uploadedImage\" :src=\"uploadedImage\" alt=\"Uploaded Image\" />\n    <button @click=\"detectFacialLandmarks\">Detect</button>\n    <img v-if=\"detectedImage\" :src=\"detectedImage\" alt=\"Detected Image\" />\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      file: null,\n      detectedImage: null,\n    };\n  },\n  methods: {\n    handleFileChange(event) {\n      this.file = event.target.files[0];\n    },\n    async uploadFile() {\n      if (!this.file) {\n        alert(\"Please select a file to upload.\");\n        return;\n      }\n\n      const reader = new FileReader();\n\n      reader.onload = async () => {\n        const base64String = reader.result.split(',')[1]; // Extract base64 string\n\n        try {\n          const response = await fetch(\"http://127.0.0.1:5000/process_image\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ image: base64String }), // Send base64 string in JSON format\n          });\n          \n          if (response.ok) {\n            alert(\"File uploaded successfully!\");\n          } else {\n            alert(\"Failed to upload file.\");\n          }\n        } catch (error) {\n          console.error(\"Error uploading file:\", error);\n          alert(\"An error occurred while uploading the file.\");\n        }\n      };\n\n      reader.readAsDataURL(this.file); // Read the file as Data URL\n    },\n    async detectFacialLandmarks() {\n  try {\n    const response = await fetch(\"http://127.0.0.1:5000/get_processed_image\", {\n      method: \"GET\", \n    });\n\n    if (response.ok) {\n      const blob = await response.blob(); // Get the image data as Blob\n\n      // Create a Blob URL for the image\n      const imageUrl = URL.createObjectURL(blob);\n\n      // Display the image\n      this.detectedImage = imageUrl;\n      \n      alert(\"Facial landmarks detected successfully!\");\n    } else {\n      alert(\"Failed to detect facial landmarks.\");\n    }\n  } catch (error) {\n    console.error(\"Error detecting facial landmarks:\", error);\n    alert(\"An error occurred while detecting facial landmarks.\");\n  }\n},\n\n\n  },\n};\n</script>\n\n<style scoped>\n/* Add your scoped CSS styling here */\n</style>\n"],"mappings":";;;AAWA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACJ,IAAG,GAAII,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACP,IAAI,EAAE;QACdQ,KAAK,CAAC,iCAAiC,CAAC;QACxC;MACF;MAEA,MAAMC,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;MAE/BD,MAAM,CAACE,MAAK,GAAI,YAAY;QAC1B,MAAMC,YAAW,GAAIH,MAAM,CAACI,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;;QAElD,IAAI;UACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,qCAAqC,EAAE;YAClEC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEC,KAAK,EAAEV;YAAa,CAAC,CAAC,CAAE;UACjD,CAAC,CAAC;UAEF,IAAIG,QAAQ,CAACQ,EAAE,EAAE;YACff,KAAK,CAAC,6BAA6B,CAAC;UACtC,OAAO;YACLA,KAAK,CAAC,wBAAwB,CAAC;UACjC;QACF,EAAE,OAAOgB,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7ChB,KAAK,CAAC,6CAA6C,CAAC;QACtD;MACF,CAAC;MAEDC,MAAM,CAACiB,aAAa,CAAC,IAAI,CAAC1B,IAAI,CAAC,EAAE;IACnC,CAAC;IACD,MAAM2B,qBAAqBA,CAAA,EAAG;MAChC,IAAI;QACF,MAAMZ,QAAO,GAAI,MAAMC,KAAK,CAAC,2CAA2C,EAAE;UACxEC,MAAM,EAAE;QACV,CAAC,CAAC;QAEF,IAAIF,QAAQ,CAACQ,EAAE,EAAE;UACf,MAAMK,IAAG,GAAI,MAAMb,QAAQ,CAACa,IAAI,CAAC,CAAC,EAAE;;UAEpC;UACA,MAAMC,QAAO,GAAIC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;;UAE1C;UACA,IAAI,CAAC3B,aAAY,GAAI4B,QAAQ;UAE7BrB,KAAK,CAAC,yCAAyC,CAAC;QAClD,OAAO;UACLA,KAAK,CAAC,oCAAoC,CAAC;QAC7C;MACF,EAAE,OAAOgB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzDhB,KAAK,CAAC,qDAAqD,CAAC;MAC9D;IACF;EAGE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}