{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Image with Face Landmark Detection\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Uploaded Image:\", -1 /* HOISTED */);\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Detected Landmarks:\", -1 /* HOISTED */);\nconst _hoisted_9 = [\"src\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => _ctx.handleFileChange && _ctx.handleFileChange(...args)),\n    accept: \".jpg, .jpeg, .png\"\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.uploadFile && _ctx.uploadFile(...args))\n  }, \"Upload\")]), _ctx.uploadedImage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"img\", {\n    src: _ctx.uploadedImage,\n    alt: \"Uploaded Image\"\n  }, null, 8 /* PROPS */, _hoisted_5), _hoisted_6, _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.detectFacialLandmarks && _ctx.detectFacialLandmarks(...args))\n  }, \"Detect Landmarks\")])) : _createCommentVNode(\"v-if\", true), _ctx.detectedImage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"img\", {\n    src: _ctx.detectedImage,\n    alt: \"Detected Image\"\n  }, null, 8 /* PROPS */, _hoisted_9)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","type","onChange","_cache","args","_ctx","handleFileChange","accept","onClick","uploadFile","uploadedImage","_hoisted_3","_hoisted_4","src","alt","_hoisted_5","_hoisted_6","detectFacialLandmarks","_createCommentVNode","detectedImage","_hoisted_7","_hoisted_8","_hoisted_9"],"sources":["/home/waseem/project/client-/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Image with Face Landmark Detection</h1>\n    <div>\n      <input type=\"file\" @change=\"handleFileChange\" accept=\".jpg, .jpeg, .png\" />\n      <button @click=\"uploadFile\">Upload</button>\n    </div>\n    <div v-if=\"uploadedImage\">\n      <h2>Uploaded Image:</h2>\n      <img :src=\"uploadedImage\" alt=\"Uploaded Image\" />\n      <br>\n      <button @click=\"detectFacialLandmarks\">Detect Landmarks</button>\n    </div>\n    <div v-if=\"detectedImage\">\n      <h2>Detected Landmarks:</h2>\n      <img :src=\"detectedImage\" alt=\"Detected Image\" />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      file: null, // Store the selected file object\n      uploadedImage: null, // Store the processed image data URL (base64)\n      detectedImage: null, // Store the detected landmarks image data URL (base64)\n    };\n  },\n  methods: {\n    handleFileChange(event) {\n      this.file = event.target.files[0];\n    },\n    async uploadFile() {\n      if (!this.file) {\n        alert(\"Please select a file to upload.\");\n        return;\n      }\n\n      const reader = new FileReader();\n      reader.onload = () => {\n        const base64String = reader.result.split(',')[1]; // Extract base64 string\n\n        // Use the base64String for uploading in the try block below\n        try {\n          // Replace with your API endpoint and appropriate method (POST for upload)\n          const response = await fetch(\"http://127.0.0.1:5000/process_image\", {\n            method: \"POST\",\n            body: JSON.stringify({ image: base64String }), // Send base64 data in JSON\n            headers: { \"Content-Type\": \"application/json\" },\n          });\n\n          if (response.ok) {\n            // Assuming your backend returns the processed image data URL\n            this.uploadedImage = response.json().processedImage; // Update with data URL\n            alert(\"File uploaded and processed successfully!\");\n          } else {\n            alert(\"Failed to upload and process file.\");\n          }\n        } catch (error) {\n          console.error(\"Error uploading and processing file:\", error);\n          alert(\"An error occurred while uploading and processing the file.\");\n        }\n      };\n      reader.readAsDataURL(this.file);\n    },\n    async detectFacialLandmarks() {\n      if (!this.uploadedImage) {\n        alert(\"Please upload and process an image first.\");\n        return;\n      }\n\n      try {\n        // Replace with your API endpoint for landmark detection (GET?)\n        const response = await fetch(\"http://127.0.0.1:5000/get_processed_image\", {\n          method: \"GET\",\n        });\n\n        if (response.ok) {\n          const blob = await response.blob();\n          const imageUrl = URL.createObjectURL(blob);\n          this.detectedImage = imageUrl;\n          alert(\"Facial landmarks detected successfully!\");\n        } else {\n          alert(\"Failed to detect facial landmarks.\");\n        }\n      } catch (error) {\n        console.error(\"Error detecting facial landmarks:\", error);\n        alert(\"An error occurred while detecting facial landmarks.\");\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;gCACXC,mBAAA,CAA2C,YAAvC,oCAAkC;;EAF1CC,GAAA;AAAA;gCAQMD,mBAAA,CAAwB,YAApB,iBAAe;mBARzB;gCAUMA,mBAAA,CAAI;;EAVVC,GAAA;AAAA;gCAcMD,mBAAA,CAA4B,YAAxB,qBAAmB;mBAd7B;;uBACEE,mBAAA,CAgBM,OAhBNC,UAgBM,GAfJC,UAA2C,EAC3CJ,mBAAA,CAGM,cAFJA,mBAAA,CAA2E;IAApEK,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,gBAAA,IAAAD,IAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;IAAEG,MAAM,EAAC;qCACrDX,mBAAA,CAA2C;IAAlCY,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAI,UAAA,IAAAJ,IAAA,CAAAI,UAAA,IAAAL,IAAA,CAAU;KAAE,QAAM,E,GAEzBC,IAAA,CAAAK,aAAa,I,cAAxBZ,mBAAA,CAKM,OAZVa,UAAA,GAQMC,UAAwB,EACxBhB,mBAAA,CAAiD;IAA3CiB,GAAG,EAAER,IAAA,CAAAK,aAAa;IAAEI,GAAG,EAAC;0BATpCC,UAAA,GAUMC,UAAI,EACJpB,mBAAA,CAAgE;IAAvDY,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAY,qBAAA,IAAAZ,IAAA,CAAAY,qBAAA,IAAAb,IAAA,CAAqB;KAAE,kBAAgB,E,KAX7Dc,mBAAA,gBAaeb,IAAA,CAAAc,aAAa,I,cAAxBrB,mBAAA,CAGM,OAhBVsB,UAAA,GAcMC,UAA4B,EAC5BzB,mBAAA,CAAiD;IAA3CiB,GAAG,EAAER,IAAA,CAAAc,aAAa;IAAEL,GAAG,EAAC;0BAfpCQ,UAAA,E,KAAAJ,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}