{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"facial-landmark-detection\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Facial Landmark Detection\")], -1 /* HOISTED */);\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"status\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  ref: \"outputCanvas\",\n  width: \"600\",\n  height: \"400\"\n};\nconst _hoisted_6 = {\n  key: 2,\n  class: \"result-image-container\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Uploaded Image\", -1 /* HOISTED */);\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  key: 3,\n  class: \"result-image-container\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Fetched Result\", -1 /* HOISTED */);\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"footer\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Â© 2024 Facial Landmark Detection\")], -1 /* HOISTED */);\nexport function render(_ctx, _cache) {\n  const _component_HelloWorld = _resolveComponent(\"HelloWorld\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"main\", null, [_createElementVNode(\"table\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    accept: \".jpg\",\n    onChange: _cache[0] || (_cache[0] = (...args) => _ctx.handleImageUpload && _ctx.handleImageUpload(...args))\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.uploadImage && _ctx.uploadImage(...args))\n  }, \"Upload\")]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.fetchResultImage && _ctx.fetchResultImage(...args)),\n    disabled: !_ctx.result\n  }, \" Fetch Result \", 8 /* PROPS */, _hoisted_3)])])]), _ctx.status !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(_ctx.status), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _ctx.result ? (_openBlock(), _createElementBlock(\"canvas\", _hoisted_5, null, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _ctx.uploadedImage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"img\", {\n    src: _ctx.uploadedImage,\n    alt: \"Uploaded Image\"\n  }, null, 8 /* PROPS */, _hoisted_8)])) : _createCommentVNode(\"v-if\", true), _ctx.fetchedImage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_hoisted_10, _createCommentVNode(\" Display the fetched base64 image \"), _createElementVNode(\"img\", {\n    src: _ctx.fetchedImage,\n    alt: \"Fetched Result Image\"\n  }, null, 8 /* PROPS */, _hoisted_11)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Include HelloWorld.vue component \"), _createVNode(_component_HelloWorld)]), _hoisted_12]);\n}","map":{"version":3,"names":["id","_createElementVNode","key","class","ref","width","height","_createElementBlock","_hoisted_1","_hoisted_2","type","accept","onChange","_cache","args","_ctx","handleImageUpload","onClick","uploadImage","fetchResultImage","disabled","result","_hoisted_3","status","_hoisted_4","_toDisplayString","_createCommentVNode","_hoisted_5","uploadedImage","_hoisted_6","_hoisted_7","src","alt","_hoisted_8","fetchedImage","_hoisted_9","_hoisted_10","_hoisted_11","_createVNode","_component_HelloWorld","_hoisted_12"],"sources":["/home/waseem/experiments/waseem-example-fullstack/client-/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"facial-landmark-detection\">\n    <header>\n      <h1>Facial Landmark Detection</h1>\n    </header>\n\n    <main>\n      <table>\n        <tr>\n          <td>\n            <input type=\"file\" accept=\".jpg\" @change=\"handleImageUpload\" />\n          </td>\n          <td>\n            <button @click=\"uploadImage\">Upload</button>\n          </td>\n          <td>\n            <button @click=\"fetchResultImage\" :disabled=\"!result\">\n              Fetch Result\n            </button>\n          </td>\n        </tr>\n      </table>\n\n      <div v-if=\"status !== null\" class=\"status\">\n        {{ status }}\n      </div>\n\n      <canvas v-if=\"result\" ref=\"outputCanvas\" width=\"600\" height=\"400\"></canvas>\n\n      <div v-if=\"uploadedImage\" class=\"result-image-container\">\n        <h2>Uploaded Image</h2>\n        <img :src=\"uploadedImage\" alt=\"Uploaded Image\" />\n      </div>\n\n      <div v-if=\"fetchedImage\" class=\"result-image-container\">\n        <h2>Fetched Result</h2>\n        <!-- Display the fetched base64 image -->\n        <img :src=\"fetchedImage\" alt=\"Fetched Result Image\" />\n      </div>\n\n      <!-- Include HelloWorld.vue component -->\n      <HelloWorld />\n    </main>\n\n    <footer>\n      <p>&copy; 2024 Facial Landmark Detection</p>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport HelloWorld from './App.vue'; // Import HelloWorld.vue\n\nexport default {\n  components: {\n    HelloWorld, // Register HelloWorld component\n  },\n  data() {\n    return {\n      status: null,\n      uploadedImage: null,\n      fetchedImage: null,\n      imageFile: null,\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.status = null;\n      this.uploadedImage = null;\n      this.fetchedImage = null;\n      const input = event.target;\n      this.imageFile = input.files[0];\n    },\n    async uploadImage() {\n      if (!this.imageFile) {\n        this.status = \"Please select an image file.\";\n        return;\n      }\n\n      // Convert image to base64\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const base64Data = reader.result.split(',')[1];\n        try {\n          const uploadResponse = await fetch(\"http://127.0.0.1:5000/\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ image: base64Data }),\n          });\n\n          if (uploadResponse.ok) {\n            this.status = \"Image upload successful!\";\n            this.uploadedImage = data:image/jpeg;base64,${base64Data};\n          } else {\n            this.status = \"Image upload failed. Please try again.\";\n          }\n        } catch (error) {\n          console.error(\"Error uploading image:\", error);\n          this.status = \"Image upload failed. Please try again.\";\n        }\n      };\n\n      reader.readAsDataURL(this.imageFile);\n    },\n    async fetchResultImage() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/\");\n        if (response.ok) {\n          const resultImageData = await response.text();\n          this.fetchedImage = data:image/jpeg;base64,${resultImageData};\n          this.drawLandmarks();\n        } else {\n          this.status = \"Error fetching result image.\";\n        }\n      } catch (error) {\n        console.error(\"Error fetching result image:\", error);\n        this.status = \"Error fetching result image. Please try again.\";\n      }\n    },\n    drawLandmarks() {\n      // Add code to draw facial landmarks on the canvas if needed\n    },\n  },\n};\n</script>\n\n<style>\n/* Add your CSS styling here */\nheader {\n  background-color: #333;\n  color: #fff;\n  text-align: center;\n  padding: 10px;\n}\n\nfooter {\n  background-color: #333;\n  color: #fff;\n  text-align: center;\n  padding: 10px;\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n}\n\nmain {\n  margin: 20px;\n}\n\ntable {\n  margin-bottom: 20px;\n}\n\n.status {\n  margin-top: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  background-color: #f0f0f0;\n}\n\n.result-image-container {\n  margin-top: 20px;\n}\n\n.result-image-container h2 {\n  text-align: center;\n}\n.result-image-container img {\n  max-width: 100%;\n  height: auto;\n}\n</style>"],"mappings":";;EACOA,EAAE,EAAC;AAA2B;gCACjCC,mBAAA,CAES,iB,aADPA,mBAAA,CAAkC,YAA9B,2BAAyB,E;mBAHnC;;EAAAC,GAAA;EAuBkCC,KAAK,EAAC;;;EAvBxCD,GAAA;EA2B4BE,GAAG,EAAC,cAAc;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;EA3BlEJ,GAAA;EA6BgCC,KAAK,EAAC;;gCAC9BF,mBAAA,CAAuB,YAAnB,gBAAc;mBA9B1B;;EAAAC,GAAA;EAkC+BC,KAAK,EAAC;;iCAC7BF,mBAAA,CAAuB,YAAnB,gBAAc;oBAnC1B;iCA4CIA,mBAAA,CAES,iB,aADPA,mBAAA,CAA4C,WAAzC,kCAAqC,E;;;uBA5C5CM,mBAAA,CA8CM,OA9CNC,UA8CM,GA7CJC,UAES,EAETR,mBAAA,CAoCO,eAnCLA,mBAAA,CAcQ,gBAbNA,mBAAA,CAYK,aAXHA,mBAAA,CAEK,aADHA,mBAAA,CAA+D;IAAxDS,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,iBAAA,IAAAD,IAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;uCAE7Db,mBAAA,CAEK,aADHA,mBAAA,CAA4C;IAAnCgB,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAG,WAAA,IAAAH,IAAA,CAAAG,WAAA,IAAAJ,IAAA,CAAW;KAAE,QAAM,E,GAErCb,mBAAA,CAIK,aAHHA,mBAAA,CAES;IAFAgB,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAI,gBAAA,IAAAJ,IAAA,CAAAI,gBAAA,IAAAL,IAAA,CAAgB;IAAGM,QAAQ,GAAGL,IAAA,CAAAM;KAAQ,gBAEtD,iBAlBZC,UAAA,E,OAuBiBP,IAAA,CAAAQ,MAAM,a,cAAjBhB,mBAAA,CAEM,OAFNiB,UAEM,EAAAC,gBAAA,CADDV,IAAA,CAAAQ,MAAM,oBAxBjBG,mBAAA,gBA2BoBX,IAAA,CAAAM,MAAM,I,cAApBd,mBAAA,CAA2E,UAA3EoB,UAA2E,iCA3BjFD,mBAAA,gBA6BiBX,IAAA,CAAAa,aAAa,I,cAAxBrB,mBAAA,CAGM,OAHNsB,UAGM,GAFJC,UAAuB,EACvB7B,mBAAA,CAAiD;IAA3C8B,GAAG,EAAEhB,IAAA,CAAAa,aAAa;IAAEI,GAAG,EAAC;0BA/BtCC,UAAA,E,KAAAP,mBAAA,gBAkCiBX,IAAA,CAAAmB,YAAY,I,cAAvB3B,mBAAA,CAIM,OAJN4B,UAIM,GAHJC,WAAuB,EACvBV,mBAAA,sCAAyC,EACzCzB,mBAAA,CAAsD;IAAhD8B,GAAG,EAAEhB,IAAA,CAAAmB,YAAY;IAAEF,GAAG,EAAC;0BArCrCK,WAAA,E,KAAAX,mBAAA,gBAwCMA,mBAAA,sCAAyC,EACzCY,YAAA,CAAcC,qBAAA,E,GAGhBC,WAES,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}