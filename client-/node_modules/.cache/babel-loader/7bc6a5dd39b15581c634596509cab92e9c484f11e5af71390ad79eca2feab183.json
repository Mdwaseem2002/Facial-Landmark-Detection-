{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Test Case Creation Interface\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"input\"\n}, \"Input Space:\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"output\"\n}, \"Output Space:\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"chatbotType\"\n}, \"Chatbot Type Selection:\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"type1\"\n}, \"Type 1\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"type2\"\n}, \"Type 2\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"errorClassification\"\n}, \"Error Classification:\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"error1\"\n}, \"Error 1\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"error2\"\n}, \"Error 2\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Test Case Creation Interface \"), _hoisted_1, _createCommentVNode(\" Input Space \"), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"input\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputData = $event),\n    rows: \"4\",\n    cols: \"50\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.inputData]])]), _createCommentVNode(\" Output Space \"), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"output\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.outputData = $event),\n    rows: \"4\",\n    cols: \"50\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.outputData]])]), _createCommentVNode(\" Chatbot Type Selection \"), _createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"select\", {\n    id: \"chatbotType\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.selectedChatbotType = $event)\n  }, [_hoisted_5, _hoisted_6, _createCommentVNode(\" Add more options as needed \")], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedChatbotType]])]), _createCommentVNode(\" Error Classification Dropdown \"), _createElementVNode(\"div\", null, [_hoisted_7, _withDirectives(_createElementVNode(\"select\", {\n    id: \"errorClassification\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.selectedErrorClassification = $event)\n  }, [_hoisted_8, _hoisted_9, _createCommentVNode(\" Add more options as needed \")], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedErrorClassification]])])]);\n}","map":{"version":3,"names":["_createElementVNode","for","value","_createElementBlock","_createCommentVNode","_hoisted_1","_hoisted_2","id","_cache","$event","$data","inputData","rows","cols","_hoisted_3","outputData","_hoisted_4","selectedChatbotType","_hoisted_5","_hoisted_6","_hoisted_7","selectedErrorClassification","_hoisted_8","_hoisted_9"],"sources":["/home/waseem/experiments/waseem-example-fullstack/client-/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Test Case Creation Interface -->\n    <h2>Test Case Creation Interface</h2>\n    \n    <!-- Input Space -->\n    <div>\n      <label for=\"input\">Input Space:</label>\n      <textarea id=\"input\" v-model=\"inputData\" rows=\"4\" cols=\"50\"></textarea>\n    </div>\n    \n    <!-- Output Space -->\n    <div>\n      <label for=\"output\">Output Space:</label>\n      <textarea id=\"output\" v-model=\"outputData\" rows=\"4\" cols=\"50\"></textarea>\n    </div>\n    \n    <!-- Chatbot Type Selection -->\n    <div>\n      <label for=\"chatbotType\">Chatbot Type Selection:</label>\n      <select id=\"chatbotType\" v-model=\"selectedChatbotType\">\n        <option value=\"type1\">Type 1</option>\n        <option value=\"type2\">Type 2</option>\n        <!-- Add more options as needed -->\n      </select>\n    </div>\n    \n    <!-- Error Classification Dropdown -->\n    <div>\n      <label for=\"errorClassification\">Error Classification:</label>\n      <select id=\"errorClassification\" v-model=\"selectedErrorClassification\">\n        <option value=\"error1\">Error 1</option>\n        <option value=\"error2\">Error 2</option>\n        <!-- Add more options as needed -->\n      </select>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      inputData: '',\n      outputData: '',\n      selectedChatbotType: 'type1', // Default value\n      selectedErrorClassification: 'error1' // Default value\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* Add your custom styles here */\n</style>\n"],"mappings":";;gEAGIA,mBAAA,CAAqC,YAAjC,8BAA4B;gEAI9BA,mBAAA,CAAuC;EAAhCC,GAAG,EAAC;AAAO,GAAC,cAAY;gEAM/BD,mBAAA,CAAyC;EAAlCC,GAAG,EAAC;AAAQ,GAAC,eAAa;gEAMjCD,mBAAA,CAAwD;EAAjDC,GAAG,EAAC;AAAa,GAAC,yBAAuB;gEAE9CD,mBAAA,CAAqC;EAA7BE,KAAK,EAAC;AAAO,GAAC,QAAM;gEAC5BF,mBAAA,CAAqC;EAA7BE,KAAK,EAAC;AAAO,GAAC,QAAM;gEAO9BF,mBAAA,CAA8D;EAAvDC,GAAG,EAAC;AAAqB,GAAC,uBAAqB;gEAEpDD,mBAAA,CAAuC;EAA/BE,KAAK,EAAC;AAAQ,GAAC,SAAO;gEAC9BF,mBAAA,CAAuC;EAA/BE,KAAK,EAAC;AAAQ,GAAC,SAAO;;uBA/BpCC,mBAAA,CAmCM,cAlCJC,mBAAA,kCAAqC,EACrCC,UAAqC,EAErCD,mBAAA,iBAAoB,EACpBJ,mBAAA,CAGM,cAFJM,UAAuC,E,gBACvCN,mBAAA,CAAuE;IAA7DO,EAAE,EAAC,OAAO;IAR1B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQoCC,KAAA,CAAAC,SAAS,GAAAF,MAAA;IAAEG,IAAI,EAAC,GAAG;IAACC,IAAI,EAAC;iDAAzBH,KAAA,CAAAC,SAAS,E,KAGzCP,mBAAA,kBAAqB,EACrBJ,mBAAA,CAGM,cAFJc,UAAyC,E,gBACzCd,mBAAA,CAAyE;IAA/DO,EAAE,EAAC,QAAQ;IAd3B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAcqCC,KAAA,CAAAK,UAAU,GAAAN,MAAA;IAAEG,IAAI,EAAC,GAAG;IAACC,IAAI,EAAC;iDAA1BH,KAAA,CAAAK,UAAU,E,KAG3CX,mBAAA,4BAA+B,EAC/BJ,mBAAA,CAOM,cANJgB,UAAwD,E,gBACxDhB,mBAAA,CAIS;IAJDO,EAAE,EAAC,aAAa;IApB9B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoBwCC,KAAA,CAAAO,mBAAmB,GAAAR,MAAA;MACnDS,UAAqC,EACrCC,UAAqC,EACrCf,mBAAA,gCAAmC,C,0CAHHM,KAAA,CAAAO,mBAAmB,E,KAOvDb,mBAAA,mCAAsC,EACtCJ,mBAAA,CAOM,cANJoB,UAA8D,E,gBAC9DpB,mBAAA,CAIS;IAJDO,EAAE,EAAC,qBAAqB;IA9BtC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA8BgDC,KAAA,CAAAW,2BAA2B,GAAAZ,MAAA;MACnEa,UAAuC,EACvCC,UAAuC,EACvCnB,mBAAA,gCAAmC,C,0CAHKM,KAAA,CAAAW,2BAA2B,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}