{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Upload Image:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit Image\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Processed Image:\", -1 /* HOISTED */);\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.message), 1 /* TEXT */), _createCommentVNode(\" Form to submit image data \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.submitImage && $options.submitImage(...args), [\"prevent\"]))\n  }, [_hoisted_2, _createElementVNode(\"input\", {\n    type: \"file\",\n    accept: \".jpg\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleImageUpload && $options.handleImageUpload(...args)),\n    required: \"\"\n  }, null, 32 /* NEED_HYDRATION */), _hoisted_3], 32 /* NEED_HYDRATION */), _createCommentVNode(\" Display processed image \"), $data.processedImage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"img\", {\n    src: $data.processedImage,\n    alt: \"Processed Image\"\n  }, null, 8 /* PROPS */, _hoisted_6)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Display any error message \"), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"p\", null, \"Error: \" + _toDisplayString($data.errorMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","_createElementVNode","type","key","_createElementBlock","_hoisted_1","_toDisplayString","$data","message","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","submitImage","_hoisted_2","accept","onChange","handleImageUpload","required","_hoisted_3","processedImage","_hoisted_4","_hoisted_5","src","alt","_hoisted_6","errorMessage","_hoisted_7"],"sources":["/home/waseem/experiments/waseem-example-fullstack/client-/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>{{ message }}</h1>\n\n    <!-- Form to submit image data -->\n    <form @submit.prevent=\"submitImage\">\n      <label>Upload Image:</label>\n      <input type=\"file\" accept=\".jpg\" @change=\"handleImageUpload\" required>\n\n      <button type=\"submit\">Submit Image</button>\n    </form>\n\n    <!-- Display processed image -->\n    <div v-if=\"processedImage\">\n      <h2>Processed Image:</h2>\n      <img :src=\"processedImage\" alt=\"Processed Image\">\n    </div>\n\n    <!-- Display any error message -->\n    <div v-if=\"errorMessage\">\n      <p>Error: {{ errorMessage }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      message: 'Facial Landmark Detection',\n      imageFile: null,\n      processedImage: null,\n      errorMessage: null\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.imageFile = event.target.files[0];\n    },\n    async submitImage() {\n      try {\n        // Create a FormData object and append the image file\n        const formData = new FormData();\n        formData.append('image', this.imageFile);\n\n        // Send a POST request to Flask server to process the image\n        const response = await fetch('http://127.0.0.1:5000/process_image', {\n          method: 'POST',\n          body: formData\n        });\n\n        // Check if the request was successful\n        if (response.ok) {\n          const responseData = await response.json();\n          // Update processedImage with the URL of the processed image\n          this.processedImage = responseData.processed_image;\n          // Clear any previous error messages\n          this.errorMessage = null;\n        } else {\n          // Display error message if the request fails\n          const errorData = await response.json();\n          this.errorMessage = errorData.message;\n          this.processedImage = null;\n        }\n      } catch (error) {\n        // Handle network errors\n        console.error('Error:', error);\n        this.errorMessage = 'Failed to process the image.';\n        this.processedImage = null;\n      }\n    }\n  }\n};\n</script>\n\n<style>\n/* Your component styles go here */\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;gCAKTC,mBAAA,CAA4B,eAArB,eAAa;gCAGpBA,mBAAA,CAA2C;EAAnCC,IAAI,EAAC;AAAQ,GAAC,cAAY;;EATxCC,GAAA;AAAA;gCAcMF,mBAAA,CAAyB,YAArB,kBAAgB;mBAd1B;;EAAAE,GAAA;AAAA;;uBACEC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJJ,mBAAA,CAAsB,YAAAK,gBAAA,CAAfC,KAAA,CAAAC,OAAO,kBAEdC,mBAAA,+BAAkC,EAClCR,mBAAA,CAKO;IALAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALjBC,cAAA,KAAAC,IAAA,KAK2BC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;MAChCG,UAA4B,EAC5Bf,mBAAA,CAAsE;IAA/DC,IAAI,EAAC,MAAM;IAACe,MAAM,EAAC,MAAM;IAAEC,QAAM,EAAAP,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAK,iBAAA,IAAAL,QAAA,CAAAK,iBAAA,IAAAN,IAAA,CAAiB;IAAEO,QAAQ,EAAR;qCAE7DC,UAA2C,C,4BAG7CZ,mBAAA,6BAAgC,EACrBF,KAAA,CAAAe,cAAc,I,cAAzBlB,mBAAA,CAGM,OAhBVmB,UAAA,GAcMC,UAAyB,EACzBvB,mBAAA,CAAiD;IAA3CwB,GAAG,EAAElB,KAAA,CAAAe,cAAc;IAAEI,GAAG,EAAC;0BAfrCC,UAAA,E,KAAAlB,mBAAA,gBAkBIA,mBAAA,+BAAkC,EACvBF,KAAA,CAAAqB,YAAY,I,cAAvBxB,mBAAA,CAEM,OArBVyB,UAAA,GAoBM5B,mBAAA,CAAgC,WAA7B,SAAO,GAAAK,gBAAA,CAAGC,KAAA,CAAAqB,YAAY,iB,KApB/BnB,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}