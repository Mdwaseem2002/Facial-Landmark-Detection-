{"ast":null,"code":"import HelloWorld from './App.vue'; // Import HelloWorld.vue\n\nexport default {\n  components: {\n    HelloWorld // Register HelloWorld component\n  },\n  data() {\n    return {\n      status: null,\n      uploadedImage: null,\n      fetchedImage: null,\n      imageFile: null\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.status = null;\n      this.uploadedImage = null;\n      this.fetchedImage = null;\n      const input = event.target;\n      this.imageFile = input.files[0];\n    },\n    async uploadImage() {\n      if (!this.imageFile) {\n        this.status = \"Please select an image file.\";\n        return;\n      }\n\n      // Convert image to base64\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const base64Data = reader.result.split(',')[1];\n        try {\n          const uploadResponse = await fetch(\"http://127.0.0.1:5000/\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              image: base64Data\n            })\n          });\n          if (uploadResponse.ok) {\n            this.status = \"Image upload successful!\";\n            this.uploadedImage = 'data:image/jpeg;base64,${base64Data}';\n          } else {\n            this.status = \"Image upload failed. Please try again.\";\n          }\n        } catch (error) {\n          console.error(\"Error uploading image:\", error);\n          this.status = \"Image upload failed. Please try again.\";\n        }\n      };\n      reader.readAsDataURL(this.imageFile);\n    },\n    async fetchResultImage() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/\");\n        if (response.ok) {\n          const resultImageData = await response.text();\n          this.fetchedImage = ' data:image/jpeg;base64,${resultImageData}';\n          this.drawLandmarks();\n        } else {\n          this.status = \"Error fetching result image.\";\n        }\n      } catch (error) {\n        console.error(\"Error fetching result image:\", error);\n        this.status = \"Error fetching result image. Please try again.\";\n      }\n    },\n    drawLandmarks() {\n      // Add code to draw facial landmarks on the canvas if needed\n    }\n  }\n};","map":{"version":3,"names":["HelloWorld","components","data","status","uploadedImage","fetchedImage","imageFile","methods","handleImageUpload","event","input","target","files","uploadImage","reader","FileReader","onload","base64Data","result","split","uploadResponse","fetch","method","headers","body","JSON","stringify","image","ok","error","console","readAsDataURL","fetchResultImage","response","resultImageData","text","drawLandmarks"],"sources":["/home/waseem/experiments/waseem-example-fullstack/client-/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"facial-landmark-detection\">\n    <header>\n      <h1>Facial Landmark Detection</h1>\n    </header>\n\n    <main>\n      <table>\n        <tr>\n          <td>\n            <input type=\"file\" accept=\".jpg\" @change=\"handleImageUpload\" />\n          </td>\n          <td>\n            <button @click=\"uploadImage\">Upload</button>\n          </td>\n          <td>\n            <button @click=\"fetchResultImage\" :disabled=\"!result\">\n              Fetch Result\n            </button>\n          </td>\n        </tr>\n      </table>\n\n      <div v-if=\"status !== null\" class=\"status\">\n        {{ status }}\n      </div>\n\n      <canvas v-if=\"result\" ref=\"outputCanvas\" width=\"600\" height=\"400\"></canvas>\n\n      <div v-if=\"uploadedImage\" class=\"result-image-container\">\n        <h2>Uploaded Image</h2>\n        <img :src=\"uploadedImage\" alt=\"Uploaded Image\" />\n      </div>\n\n      <div v-if=\"fetchedImage\" class=\"result-image-container\">\n        <h2>Fetched Result</h2>\n        <!-- Display the fetched base64 image -->\n        <img :src=\"fetchedImage\" alt=\"Fetched Result Image\" />\n      </div>\n\n      <!-- Include HelloWorld.vue component -->\n      <HelloWorld />\n    </main>\n\n    <footer>\n      <p>&copy; 2024 Facial Landmark Detection</p>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport HelloWorld from './App.vue'; // Import HelloWorld.vue\n\nexport default {\n  components: {\n    HelloWorld, // Register HelloWorld component\n  },\n  data() {\n    return {\n      status: null,\n      uploadedImage: null,\n      fetchedImage: null,\n      imageFile: null,\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.status = null;\n      this.uploadedImage = null;\n      this.fetchedImage = null;\n      const input = event.target;\n      this.imageFile = input.files[0];\n    },\n    async uploadImage() {\n      if (!this.imageFile) {\n        this.status = \"Please select an image file.\";\n        return;\n      }\n\n      // Convert image to base64\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const base64Data = reader.result.split(',')[1];\n        try {\n          const uploadResponse = await fetch(\"http://127.0.0.1:5000/\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ image: base64Data }),\n          });\n\n          if (uploadResponse.ok) {\n            this.status = \"Image upload successful!\";\n            this.uploadedImage = 'data:image/jpeg;base64,${base64Data}';\n          } else {\n            this.status = \"Image upload failed. Please try again.\";\n          }\n        } catch (error) {\n          console.error(\"Error uploading image:\", error);\n          this.status = \"Image upload failed. Please try again.\";\n        }\n      };\n\n      reader.readAsDataURL(this.imageFile);\n    },\n    async fetchResultImage() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/\");\n        if (response.ok) {\n          const resultImageData = await response.text();\n          this.fetchedImage =' data:image/jpeg;base64,${resultImageData}';\n          this.drawLandmarks();\n        } else {\n          this.status = \"Error fetching result image.\";\n        }\n      } catch (error) {\n        console.error(\"Error fetching result image:\", error);\n        this.status = \"Error fetching result image. Please try again.\";\n      }\n    },\n    drawLandmarks() {\n      // Add code to draw facial landmarks on the canvas if needed\n    },\n  },\n};\n</script>\n\n<style>\n/* Add your CSS styling here */\nheader {\n  background-color: #333;\n  color: #fff;\n  text-align: center;\n  padding: 10px;\n}\n\nfooter {\n  background-color: #333;\n  color: #fff;\n  text-align: center;\n  padding: 10px;\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n}\n\nmain {\n  margin: 20px;\n}\n\ntable {\n  margin-bottom: 20px;\n}\n\n.status {\n  margin-top: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  background-color: #f0f0f0;\n}\n\n.result-image-container {\n  margin-top: 20px;\n}\n\n.result-image-container h2 {\n  text-align: center;\n}\n.result-image-container img {\n  max-width: 100%;\n  height: auto;\n}\n</style>"],"mappings":"AAmDA,OAAOA,UAAS,MAAO,WAAW,EAAE;;AAEpC,eAAe;EACbC,UAAU,EAAE;IACVD,UAAU,CAAE;EACd,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI;MACZC,aAAa,EAAE,IAAI;MACnBC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAACC,KAAK,EAAE;MACvB,IAAI,CAACN,MAAK,GAAI,IAAI;MAClB,IAAI,CAACC,aAAY,GAAI,IAAI;MACzB,IAAI,CAACC,YAAW,GAAI,IAAI;MACxB,MAAMK,KAAI,GAAID,KAAK,CAACE,MAAM;MAC1B,IAAI,CAACL,SAAQ,GAAII,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;IACjC,CAAC;IACD,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACP,SAAS,EAAE;QACnB,IAAI,CAACH,MAAK,GAAI,8BAA8B;QAC5C;MACF;;MAEA;MACA,MAAMW,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAK,GAAI,YAAY;QAC1B,MAAMC,UAAS,GAAIH,MAAM,CAACI,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI;UACF,MAAMC,cAAa,GAAI,MAAMC,KAAK,CAAC,wBAAwB,EAAE;YAC3DC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEC,KAAK,EAAEV;YAAW,CAAC;UAC5C,CAAC,CAAC;UAEF,IAAIG,cAAc,CAACQ,EAAE,EAAE;YACrB,IAAI,CAACzB,MAAK,GAAI,0BAA0B;YACxC,IAAI,CAACC,aAAY,GAAI,sCAAsC;UAC7D,OAAO;YACL,IAAI,CAACD,MAAK,GAAI,wCAAwC;UACxD;QACF,EAAE,OAAO0B,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAC9C,IAAI,CAAC1B,MAAK,GAAI,wCAAwC;QACxD;MACF,CAAC;MAEDW,MAAM,CAACiB,aAAa,CAAC,IAAI,CAACzB,SAAS,CAAC;IACtC,CAAC;IACD,MAAM0B,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAAC,wBAAwB,CAAC;QACtD,IAAIY,QAAQ,CAACL,EAAE,EAAE;UACf,MAAMM,eAAc,GAAI,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;UAC7C,IAAI,CAAC9B,YAAW,GAAG,4CAA4C;UAC/D,IAAI,CAAC+B,aAAa,CAAC,CAAC;QACtB,OAAO;UACL,IAAI,CAACjC,MAAK,GAAI,8BAA8B;QAC9C;MACF,EAAE,OAAO0B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,IAAI,CAAC1B,MAAK,GAAI,gDAAgD;MAChE;IACF,CAAC;IACDiC,aAAaA,CAAA,EAAG;MACd;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}