{"ast":null,"code":"export default {\n  methods: {\n    async detectFacialLandmarks() {\n      if (!this.file) {\n        alert('Please select an image file.');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('file', this.file);\n      try {\n        const response = await fetch('/', {\n          method: 'POST',\n          body: formData\n        });\n        if (!response.ok) {\n          throw new Error(`Server returned ${response.status} ${response.statusText}`);\n        }\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n          throw new Error('Invalid response format (not JSON)');\n        }\n        const data = await response.json();\n        this.landmarks = data.landmarks;\n      } catch (error) {\n        console.error('Error detecting facial landmarks:', error);\n        alert('An error occurred while detecting facial landmarks.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["methods","detectFacialLandmarks","file","alert","formData","FormData","append","response","fetch","method","body","ok","Error","status","statusText","contentType","headers","get","includes","data","json","landmarks","error","console"],"sources":["/home/waseem/experiments/waseem-example-fullstack/client-/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- Your template content here -->\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    async detectFacialLandmarks() {\n      if (!this.file) {\n        alert('Please select an image file.');\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('file', this.file);\n\n      try {\n        const response = await fetch('/', {\n          method: 'POST',\n          body: formData\n        });\n\n        if (!response.ok) {\n          throw new Error(`Server returned ${response.status} ${response.statusText}`);\n        }\n\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n          throw new Error('Invalid response format (not JSON)');\n        }\n\n        const data = await response.json();\n        this.landmarks = data.landmarks;\n      } catch (error) {\n        console.error('Error detecting facial landmarks:', error);\n        alert('An error occurred while detecting facial landmarks.');\n      }\n    }\n  }\n};\n</script>\n\n<style>\n/* Your CSS styles here */\n</style>\n"],"mappings":"AAOA,eAAe;EACbA,OAAO,EAAE;IACP,MAAMC,qBAAqBA,CAAA,EAAG;MAC5B,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE;QACdC,KAAK,CAAC,8BAA8B,CAAC;QACrC;MACF;MAEA,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACJ,IAAI,CAAC;MAElC,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMC,KAAK,CAAC,GAAG,EAAE;UAChCC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,mBAAkBL,QAAQ,CAACM,MAAM,IAAIN,QAAQ,CAACO,UAAW,EAAC,CAAC;QAC9E;QAEA,MAAMC,WAAU,GAAIR,QAAQ,CAACS,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QACxD,IAAI,CAACF,WAAU,IAAK,CAACA,WAAW,CAACG,QAAQ,CAAC,kBAAkB,CAAC,EAAE;UAC7D,MAAM,IAAIN,KAAK,CAAC,oCAAoC,CAAC;QACvD;QAEA,MAAMO,IAAG,GAAI,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;QAClC,IAAI,CAACC,SAAQ,GAAIF,IAAI,CAACE,SAAS;MACjC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzDnB,KAAK,CAAC,qDAAqD,CAAC;MAC9D;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}