{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"facial-landmark-detection\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Facial Landmark Detection\")], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"file-input-label\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"chosen-file\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"image-box\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Selected Image\", -1 /* HOISTED */);\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  key: 2,\n  class: \"status\"\n};\nconst _hoisted_10 = {\n  key: 3,\n  ref: \"outputCanvas\",\n  width: \"600\",\n  height: \"400\"\n};\nconst _hoisted_11 = {\n  key: 4,\n  class: \"result-image-container\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Result Image\", -1 /* HOISTED */);\nconst _hoisted_13 = [\"src\"];\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"footer\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Â© 2024 Facial Landmark Detection\")], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HelloWorld = _resolveComponent(\"HelloWorld\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"main\", null, [_createElementVNode(\"table\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, [_createCommentVNode(\" Updated file input with a shorter box \"), _createElementVNode(\"label\", _hoisted_3, [_createElementVNode(\"input\", {\n    type: \"file\",\n    accept: \".jpg\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleImageUpload && $options.handleImageUpload(...args))\n  }, null, 32 /* NEED_HYDRATION */), _createTextVNode(\" Choose File \")])]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.uploadImage && $options.uploadImage(...args))\n  }, \"Upload\")]), _createElementVNode(\"td\", null, [_createCommentVNode(\" Updated fetchResultImage function to display result only when clicked \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.fetchResultImage && $options.fetchResultImage(...args)),\n    disabled: !$data.result\n  }, \" Fetch Result \", 8 /* PROPS */, _hoisted_4)])])]), _createCommentVNode(\" Display the chosen file name \"), $data.imageFile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" Chosen File: \" + _toDisplayString($data.imageFile.name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Box space to display the selected image \"), $data.uploadedImage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"img\", {\n    src: $data.uploadedImage,\n    alt: \"Selected Image\"\n  }, null, 8 /* PROPS */, _hoisted_8)])) : _createCommentVNode(\"v-if\", true), $data.status !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _toDisplayString($data.status), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.result && $data.resultVisible ? (_openBlock(), _createElementBlock(\"canvas\", _hoisted_10, null, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), $data.result && $data.resultVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"img\", {\n    src: $data.result,\n    alt: \"Result Image\"\n  }, null, 8 /* PROPS */, _hoisted_13)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Include HelloWorld.vue component \"), _createVNode(_component_HelloWorld)]), _hoisted_14]);\n}","map":{"version":3,"names":["id","_createElementVNode","class","key","ref","width","height","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","type","accept","onChange","_cache","args","$options","handleImageUpload","_createTextVNode","onClick","uploadImage","fetchResultImage","disabled","$data","result","_hoisted_4","imageFile","_hoisted_5","_toDisplayString","name","uploadedImage","_hoisted_6","_hoisted_7","src","alt","_hoisted_8","status","_hoisted_9","resultVisible","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_createVNode","_component_HelloWorld","_hoisted_14"],"sources":["/home/waseem/experiments/waseem-example-fullstack/client-/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"facial-landmark-detection\">\n    <header>\n      <h1>Facial Landmark Detection</h1>\n    </header>\n\n    <main>\n      <table>\n        <tr>\n          <td>\n            <!-- Updated file input with a shorter box -->\n            <label class=\"file-input-label\">\n              <input type=\"file\" accept=\".jpg\" @change=\"handleImageUpload\" />\n              Choose File\n            </label>\n          </td>\n          <td>\n            <button @click=\"uploadImage\">Upload</button>\n          </td>\n          <td>\n            <!-- Updated fetchResultImage function to display result only when clicked -->\n            <button @click=\"fetchResultImage\" :disabled=\"!result\">\n              Fetch Result\n            </button>\n          </td>\n        </tr>\n      </table>\n\n      <!-- Display the chosen file name -->\n      <div v-if=\"imageFile\" class=\"chosen-file\">\n        Chosen File: {{ imageFile.name }}\n      </div>\n\n      <!-- Box space to display the selected image -->\n      <div v-if=\"uploadedImage\" class=\"image-box\">\n        <h2>Selected Image</h2>\n        <img :src=\"uploadedImage\" alt=\"Selected Image\" />\n      </div>\n\n      <div v-if=\"status !== null\" class=\"status\">\n        {{ status }}\n      </div>\n\n      <canvas v-if=\"result && resultVisible\" ref=\"outputCanvas\" width=\"600\" height=\"400\"></canvas>\n\n      <div v-if=\"result && resultVisible\" class=\"result-image-container\">\n        <h2>Result Image</h2>\n        <img :src=\"result\" alt=\"Result Image\" />\n      </div>\n\n      <!-- Include HelloWorld.vue component -->\n      <HelloWorld />\n    </main>\n\n    <footer>\n      <p>&copy; 2024 Facial Landmark Detection</p>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport HelloWorld from './App.vue'; // Import HelloWorld.vue\n\nexport default {\n  components: {\n    HelloWorld, // Register HelloWorld component\n  },\n  data() {\n    return {\n      status: null,\n      uploadedImage: null,\n      result: null,\n      resultVisible: false, // Added a flag to control result visibility\n      imageFile: null,\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.status = null;\n      this.uploadedImage = null;\n      this.result = null;\n      this.resultVisible = false;\n      const input = event.target;\n      this.imageFile = input.files[0];\n    },\n    async uploadImage() {\n      if (!this.imageFile) {\n        this.status = \"Please select an image file.\";\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append(\"image\", this.imageFile);\n\n      try {\n        const uploadResponse = await fetch(\"http://127.0.0.1:5000/process_image\", {\n          method: \"POST\",\n          body: formData,\n        });\n\n        if (uploadResponse.ok) {\n          this.status = \"Image upload successful!\";\n          // Automatically fetch result after successful upload if resultVisible is true\n          if (this.resultVisible) {\n            await this.fetchResultImage();\n          }\n        } else {\n          this.status = \"Image upload failed. Please try again.\";\n        }\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        this.status = \"Image upload failed. Please try again.\";\n      }\n    },\n    async fetchResultImage() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/get_processed_image\");\n        if (response.ok) {\n          const resultImageData = await response.blob();\n          this.result = URL.createObjectURL(resultImageData);\n          this.drawLandmarks();\n          // Set resultVisible to true to display the result\n          this.resultVisible = true;\n        } else {\n          this.status = \"Error fetching result image.\";\n        }\n      } catch (error) {\n        console.error(\"Error fetching result image:\", error);\n        this.status = \"Error fetching result image. Please try again.\";\n      }\n    },\n    drawLandmarks() {\n      // Add code to draw facial landmarks on the canvas if needed\n    },\n  },\n};\n</script>\n\n<style>\n/* Add your CSS styling here */\nheader {\n  background-color: #333;\n  color: #fff;\n  text-align: center;\n  padding: 10px;\n}\nfooter {\n  background-color: #333;\n  color: #fff;\n  text-align: center;\n  padding: 10px;\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n}\n\nmain {\n  margin: 20px;\n}\n\ntable {\n  margin-bottom: 20px;\n}\n\n/* Style for the file input label */\n.file-input-label {\n  display: inline-block;\n  padding: 10px;\n  border: 1px solid #ccc;\n  cursor: pointer;\n}\n\n/* Style for the chosen file box */\n.chosen-file {\n  margin-top: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n}\n\n/* Style for the image box */\n.image-box {\n  margin-top: 20px;\n  padding: 10px;\n  border: 1px solid #ccc;\n}\n\n.image-box h2 {\n  text-align: center;\n}\n\n.image-box img {\n  max-width: 100%;\n  height: auto;\n}\n\n.status {\n  margin-top: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  background-color: #f0f0f0;\n}\n\n.result-image-container {\n  margin-top: 20px;\n}\n\n.result-image-container h2 {\n  text-align: center;\n}\n\n.result-image-container img {\n  max-width: 100%;\n  height: auto;\n}\n</style>"],"mappings":";;EACOA,EAAE,EAAC;AAA2B;gCACjCC,mBAAA,CAES,iB,aADPA,mBAAA,CAAkC,YAA9B,2BAAyB,E;;EAQhBC,KAAK,EAAC;AAAkB;mBAX3C;;EAAAC,GAAA;EA6B4BD,KAAK,EAAC;;;EA7BlCC,GAAA;EAkCgCD,KAAK,EAAC;;gCAC9BD,mBAAA,CAAuB,YAAnB,gBAAc;mBAnC1B;;EAAAE,GAAA;EAuCkCD,KAAK,EAAC;;;EAvCxCC,GAAA;EA2C6CC,GAAG,EAAC,cAAc;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;EA3CnFH,GAAA;EA6C0CD,KAAK,EAAC;;iCACxCD,mBAAA,CAAqB,YAAjB,cAAY;oBA9CxB;iCAsDIA,mBAAA,CAES,iB,aADPA,mBAAA,CAA4C,WAAzC,kCAAqC,E;;;uBAtD5CM,mBAAA,CAwDM,OAxDNC,UAwDM,GAvDJC,UAES,EAETR,mBAAA,CA8CO,eA7CLA,mBAAA,CAmBQ,gBAlBNA,mBAAA,CAiBK,aAhBHA,mBAAA,CAMK,aALHS,mBAAA,2CAA8C,EAC9CT,mBAAA,CAGQ,SAHRU,UAGQ,GAFNV,mBAAA,CAA+D;IAAxDW,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;qCAZzEG,gBAAA,CAY6E,eAEjE,E,KAEFlB,mBAAA,CAEK,aADHA,mBAAA,CAA4C;IAAnCmB,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAI,WAAA,IAAAJ,QAAA,CAAAI,WAAA,IAAAL,IAAA,CAAW;KAAE,QAAM,E,GAErCf,mBAAA,CAKK,aAJHS,mBAAA,2EAA8E,EAC9ET,mBAAA,CAES;IAFAmB,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAK,gBAAA,IAAAL,QAAA,CAAAK,gBAAA,IAAAN,IAAA,CAAgB;IAAGO,QAAQ,GAAGC,KAAA,CAAAC;KAAQ,gBAEtD,iBAvBZC,UAAA,E,OA4BMhB,mBAAA,kCAAqC,EAC1Bc,KAAA,CAAAG,SAAS,I,cAApBpB,mBAAA,CAEM,OAFNqB,UAEM,EAFoC,gBAC3B,GAAAC,gBAAA,CAAGL,KAAA,CAAAG,SAAS,CAACG,IAAI,oBA9BtCpB,mBAAA,gBAiCMA,mBAAA,6CAAgD,EACrCc,KAAA,CAAAO,aAAa,I,cAAxBxB,mBAAA,CAGM,OAHNyB,UAGM,GAFJC,UAAuB,EACvBhC,mBAAA,CAAiD;IAA3CiC,GAAG,EAAEV,KAAA,CAAAO,aAAa;IAAEI,GAAG,EAAC;0BApCtCC,UAAA,E,KAAA1B,mBAAA,gBAuCiBc,KAAA,CAAAa,MAAM,a,cAAjB9B,mBAAA,CAEM,OAFN+B,UAEM,EAAAT,gBAAA,CADDL,KAAA,CAAAa,MAAM,oBAxCjB3B,mBAAA,gBA2CoBc,KAAA,CAAAC,MAAM,IAAID,KAAA,CAAAe,aAAa,I,cAArChC,mBAAA,CAA4F,UAA5FiC,WAA4F,iCA3ClG9B,mBAAA,gBA6CiBc,KAAA,CAAAC,MAAM,IAAID,KAAA,CAAAe,aAAa,I,cAAlChC,mBAAA,CAGM,OAHNkC,WAGM,GAFJC,WAAqB,EACrBzC,mBAAA,CAAwC;IAAlCiC,GAAG,EAAEV,KAAA,CAAAC,MAAM;IAAEU,GAAG,EAAC;0BA/C/BQ,WAAA,E,KAAAjC,mBAAA,gBAkDMA,mBAAA,sCAAyC,EACzCkC,YAAA,CAAcC,qBAAA,E,GAGhBC,WAES,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}