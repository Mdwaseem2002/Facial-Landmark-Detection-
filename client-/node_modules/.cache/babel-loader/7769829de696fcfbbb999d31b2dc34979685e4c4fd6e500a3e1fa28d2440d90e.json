{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  id: \"facial-landmark-detection\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Facial Landmark Detection\")], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"green-layer\"\n};\nconst _hoisted_4 = {\n  class: \"image-box-short\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"status\"\n};\nconst _hoisted_7 = {\n  key: 2,\n  ref: \"outputCanvas\",\n  width: \"400\",\n  height: \"300\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"footer\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Â© 2024 Facial Landmark Detection\")], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HelloWorld = _resolveComponent(\"HelloWorld\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"main\", null, [_createCommentVNode(\" HelloWorld component at the top \"), _createVNode(_component_HelloWorld), _createCommentVNode(\" Green layer with white background \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"table\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, [_createCommentVNode(\" Rectangle box to display the image (shorter size) \"), _createElementVNode(\"div\", _hoisted_4, [$data.imageFile ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $options.imageFileURL,\n    alt: \"Uploaded Image\"\n  }, null, 8 /* PROPS */, _hoisted_5)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"input\", {\n    type: \"file\",\n    accept: \".jpg\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleImageUpload && $options.handleImageUpload(...args))\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"td\", null, [_createCommentVNode(\" Properly arranged Upload button \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.uploadImage && $options.uploadImage(...args))\n  }, \"Upload\")])])]), $data.status !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($data.status), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Result button \"), $data.result ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.showResult && $options.showResult(...args))\n  }, \"Show Result\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Result canvas \"), $data.result ? (_openBlock(), _createElementBlock(\"canvas\", _hoisted_7, null, 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), $data.resultImageURL ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 3,\n    src: $data.resultImageURL,\n    alt: \"Result Image\"\n  }, null, 8 /* PROPS */, _hoisted_8)) : _createCommentVNode(\"v-if\", true)])]), _hoisted_9]);\n}","map":{"version":3,"names":["id","_createElementVNode","class","key","ref","width","height","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_createVNode","_component_HelloWorld","_hoisted_3","_hoisted_4","$data","imageFile","src","$options","imageFileURL","alt","_hoisted_5","type","accept","onChange","_cache","args","handleImageUpload","onClick","uploadImage","status","_hoisted_6","_toDisplayString","result","showResult","_hoisted_7","resultImageURL","_hoisted_8","_hoisted_9"],"sources":["/home/waseem/experiments/waseem-example-fullstack/client-/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"facial-landmark-detection\">\n    <header>\n      <h1>Facial Landmark Detection</h1>\n    </header>\n\n    <main>\n      <!-- HelloWorld component at the top -->\n      <HelloWorld />\n\n      <!-- Green layer with white background -->\n      <div class=\"green-layer\">\n        <table>\n          <tr>\n            <td>\n              <!-- Rectangle box to display the image (shorter size) -->\n              <div class=\"image-box-short\">\n                <img v-if=\"imageFile\" :src=\"imageFileURL\" alt=\"Uploaded Image\" />\n              </div>\n              <input type=\"file\" accept=\".jpg\" @change=\"handleImageUpload\" />\n            </td>\n            <td>\n              <!-- Properly arranged Upload button -->\n              <button @click=\"uploadImage\">Upload</button>\n            </td>\n          </tr>\n        </table>\n\n        <div v-if=\"status !== null\" class=\"status\">\n          {{ status }}\n        </div>\n\n        <!-- Result button -->\n        <button v-if=\"result\" @click=\"showResult\">Show Result</button>\n\n        <!-- Result canvas -->\n        <canvas v-if=\"result\" ref=\"outputCanvas\" width=\"400\" height=\"300\"></canvas>\n        <img v-if=\"resultImageURL\" :src=\"resultImageURL\" alt=\"Result Image\" />\n      </div>\n    </main>\n\n    <footer>\n      <p>&copy; 2024 Facial Landmark Detection</p>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport HelloWorld from './HelloWorld.vue'; // Import HelloWorld.vue\n\nexport default {\n  components: {\n    HelloWorld, // Register HelloWorld component\n  },\n  data() {\n    return {\n      status: null,\n      result: null,\n      resultImageURL: null,\n      imageFile: null,\n    };\n  },\n  computed: {\n    imageFileURL() {\n      return URL.createObjectURL(this.imageFile);\n    },\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.status = null;\n      this.result = null;\n      this.resultImageURL = null;\n      const input = event.target;\n      this.imageFile = input.files[0];\n    },\n    async uploadImage() {\n      if (!this.imageFile) {\n        this.status = \"Please select an image file.\";\n        return;\n      }\n\n      // Convert the image to base64 before sending\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        this.sendImageToBackend(reader.result);\n      };\n      reader.readAsDataURL(this.imageFile);\n    },\n    async sendImageToBackend(imageData) {\n      const formData = new FormData();\n      formData.append(\"image\", imageData);\n\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/upload\", {\n          method: \"POST\",\n          body: formData,\n        });\n\n        if (response.ok) {\n          this.status = \"Image upload successful!\";\n          const resultData = await response.json();\n          this.result = resultData;\n          this.drawLandmarks();\n        } else {\n          this.status = \"Image upload failed. Please try again.\";\n        }\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        this.status = \"Image upload failed. Please try again.\";\n      }\n    },\n    async showResult() {\n      // Fetch the result image from the backend and display it\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/result\");\n        if (response.ok) {\n          const resultImageData = await response.blob();\n          this.resultImageURL = URL.createObjectURL(resultImageData);\n        } else {\n          console.error(\"Error fetching result image\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching result image:\", error);\n      }\n    },\n    drawLandmarks() {\n      // Add code to draw facial landmarks on the canvas if needed\n    },\n  },\n};\n</script>\n\n<style>\n/* Add your CSS styling here */\nheader {\n  background-color: #333;\n  color: #fff;\n  text-align: center;\n  padding: 10px;\n}\n\nfooter {\n  background-color: #333;\n  color: #fff;\n  text-align: center;\n  padding: 10px;\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n}\n\nmain {\n  margin: 20px;\n}\n\ntable {\n  margin-bottom: 20px;\n}\n\n/* Green layer with white background */\n.green-layer {\n  background-color: white;\n  padding: 20px;\n  border: 2px solid green;\n  border-radius: 10px;\n}\n\n/* Rectangle box to display the image (shorter size) */\n.image-box-short {\n  border: 2px solid #ccc;\n  padding: 10px;\n  margin-bottom: 10px;\n  max-width: 300px;\n  max-height: 300px; /* Adjust the maximum height as needed */\n  overflow: hidden;\n}\n\n.status {\n  margin-top: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  background-color: #f0f0f0;\n}\n</style>"],"mappings":";;EACOA,EAAE,EAAC;AAA2B;gCACjCC,mBAAA,CAES,iB,aADPA,mBAAA,CAAkC,YAA9B,2BAAyB,E;;EAQxBC,KAAK,EAAC;AAAa;;EAKXA,KAAK,EAAC;AAAiB;mBAhB1C;;EAAAC,GAAA;EA4BoCD,KAAK,EAAC;;;EA5B1CC,GAAA;EAoC8BC,GAAG,EAAC,cAAc;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;mBApCpE;gCAyCIL,mBAAA,CAES,iB,aADPA,mBAAA,CAA4C,WAAzC,kCAAqC,E;;;uBAzC5CM,mBAAA,CA2CM,OA3CNC,UA2CM,GA1CJC,UAES,EAETR,mBAAA,CAiCO,eAhCLS,mBAAA,qCAAwC,EACxCC,YAAA,CAAcC,qBAAA,GAEdF,mBAAA,uCAA0C,EAC1CT,mBAAA,CA2BM,OA3BNY,UA2BM,GA1BJZ,mBAAA,CAcQ,gBAbNA,mBAAA,CAYK,aAXHA,mBAAA,CAMK,aALHS,mBAAA,uDAA0D,EAC1DT,mBAAA,CAEM,OAFNa,UAEM,GADOC,KAAA,CAAAC,SAAS,I,cAApBT,mBAAA,CAAiE;IAjBjFJ,GAAA;IAiBuCc,GAAG,EAAEC,QAAA,CAAAC,YAAY;IAAEC,GAAG,EAAC;0BAjB9DC,UAAA,KAAAX,mBAAA,e,GAmBcT,mBAAA,CAA+D;IAAxDqB,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,QAAA,CAAAS,iBAAA,IAAAT,QAAA,CAAAS,iBAAA,IAAAD,IAAA,CAAiB;uCAE7DzB,mBAAA,CAGK,aAFHS,mBAAA,qCAAwC,EACxCT,mBAAA,CAA4C;IAAnC2B,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,QAAA,CAAAW,WAAA,IAAAX,QAAA,CAAAW,WAAA,IAAAH,IAAA,CAAW;KAAE,QAAM,E,OAK9BX,KAAA,CAAAe,MAAM,a,cAAjBvB,mBAAA,CAEM,OAFNwB,UAEM,EAAAC,gBAAA,CADDjB,KAAA,CAAAe,MAAM,oBA7BnBpB,mBAAA,gBAgCQA,mBAAA,mBAAsB,EACRK,KAAA,CAAAkB,MAAM,I,cAApB1B,mBAAA,CAA8D;IAjCtEJ,GAAA;IAiC+ByB,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,QAAA,CAAAgB,UAAA,IAAAhB,QAAA,CAAAgB,UAAA,IAAAR,IAAA,CAAU;KAAE,aAAW,KAjC7DhB,mBAAA,gBAmCQA,mBAAA,mBAAsB,EACRK,KAAA,CAAAkB,MAAM,I,cAApB1B,mBAAA,CAA2E,UAA3E4B,UAA2E,iCApCnFzB,mBAAA,gBAqCmBK,KAAA,CAAAqB,cAAc,I,cAAzB7B,mBAAA,CAAsE;IArC9EJ,GAAA;IAqCoCc,GAAG,EAAEF,KAAA,CAAAqB,cAAc;IAAEhB,GAAG,EAAC;0BArC7DiB,UAAA,KAAA3B,mBAAA,e,KAyCI4B,UAES,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}