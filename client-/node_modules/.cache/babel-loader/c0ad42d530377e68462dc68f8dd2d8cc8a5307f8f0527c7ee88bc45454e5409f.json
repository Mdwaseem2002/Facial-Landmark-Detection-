{"ast":null,"code":"export default {\n  data() {\n    return {\n      message: 'Facial Landmark Detection',\n      imageFile: null,\n      processedImage: null,\n      errorMessage: null\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.imageFile = event.target.files[0];\n    },\n    async submitImage() {\n      try {\n        // Create a FormData object and append the image file\n        const formData = new FormData();\n        formData.append('image', this.imageFile);\n\n        // Send a POST request to Flask server to process the image\n        const response = await fetch('http://127.0.0.1:5000/process_image', {\n          method: 'POST',\n          body: formData\n        });\n\n        // Check if the request was successful\n        if (response.ok) {\n          const responseData = await response.json();\n          // Update processedImage with the URL of the processed image\n          this.processedImage = responseData.processed_image;\n          // Clear any previous error messages\n          this.errorMessage = null;\n        } else {\n          // Display error message if the request fails\n          const errorData = await response.json();\n          this.errorMessage = errorData.message;\n          this.processedImage = null;\n        }\n      } catch (error) {\n        // Handle network errors\n        console.error('Error:', error);\n        this.errorMessage = 'Failed to process the image.';\n        this.processedImage = null;\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","message","imageFile","processedImage","errorMessage","methods","handleImageUpload","event","target","files","submitImage","formData","FormData","append","response","fetch","method","body","ok","responseData","json","processed_image","errorData","error","console"],"sources":["/home/waseem/experiments/waseem-example-fullstack/client-/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>{{ message }}</h1>\n\n    <!-- Form to submit image data -->\n    <form @submit.prevent=\"submitImage\">\n      <label>Upload Image:</label>\n      <input type=\"file\" accept=\".jpg\" @change=\"handleImageUpload\" required>\n\n      <button type=\"submit\">Submit Image</button>\n    </form>\n\n    <!-- Display processed image -->\n    <div v-if=\"processedImage\">\n      <h2>Processed Image:</h2>\n      <img :src=\"processedImage\" alt=\"Processed Image\">\n    </div>\n\n    <!-- Display any error message -->\n    <div v-if=\"errorMessage\">\n      <p>Error: {{ errorMessage }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      message: 'Facial Landmark Detection',\n      imageFile: null,\n      processedImage: null,\n      errorMessage: null\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.imageFile = event.target.files[0];\n    },\n    async submitImage() {\n      try {\n        // Create a FormData object and append the image file\n        const formData = new FormData();\n        formData.append('image', this.imageFile);\n\n        // Send a POST request to Flask server to process the image\n        const response = await fetch('http://127.0.0.1:5000/process_image', {\n          method: 'POST',\n          body: formData\n        });\n\n        // Check if the request was successful\n        if (response.ok) {\n          const responseData = await response.json();\n          // Update processedImage with the URL of the processed image\n          this.processedImage = responseData.processed_image;\n          // Clear any previous error messages\n          this.errorMessage = null;\n        } else {\n          // Display error message if the request fails\n          const errorData = await response.json();\n          this.errorMessage = errorData.message;\n          this.processedImage = null;\n        }\n      } catch (error) {\n        // Handle network errors\n        console.error('Error:', error);\n        this.errorMessage = 'Failed to process the image.';\n        this.processedImage = null;\n      }\n    }\n  }\n};\n</script>\n\n<style>\n/* Your component styles go here */\n</style>\n"],"mappings":"AA0BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,2BAA2B;MACpCC,SAAS,EAAE,IAAI;MACfC,cAAc,EAAE,IAAI;MACpBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAACC,KAAK,EAAE;MACvB,IAAI,CAACL,SAAQ,GAAIK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACX,SAAS,CAAC;;QAExC;QACA,MAAMY,QAAO,GAAI,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAClEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;;QAEF;QACA,IAAIG,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,YAAW,GAAI,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAC1C;UACA,IAAI,CAACjB,cAAa,GAAIgB,YAAY,CAACE,eAAe;UAClD;UACA,IAAI,CAACjB,YAAW,GAAI,IAAI;QAC1B,OAAO;UACL;UACA,MAAMkB,SAAQ,GAAI,MAAMR,QAAQ,CAACM,IAAI,CAAC,CAAC;UACvC,IAAI,CAAChB,YAAW,GAAIkB,SAAS,CAACrB,OAAO;UACrC,IAAI,CAACE,cAAa,GAAI,IAAI;QAC5B;MACF,EAAE,OAAOoB,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B,IAAI,CAACnB,YAAW,GAAI,8BAA8B;QAClD,IAAI,CAACD,cAAa,GAAI,IAAI;MAC5B;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}