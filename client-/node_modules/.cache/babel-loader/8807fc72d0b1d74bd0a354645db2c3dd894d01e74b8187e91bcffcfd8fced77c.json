{"ast":null,"code":"import HelloWorld from './App.vue';\nexport default {\n  components: {\n    HelloWorld\n  },\n  data() {\n    return {\n      status: null,\n      result: null,\n      imageFile: null,\n      uploadedImage: null\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.status = null;\n      this.result = null;\n      this.uploadedImage = null;\n      const input = event.target;\n      const file = input.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.uploadedImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n        this.imageFile = file;\n      }\n    },\n    async uploadImage() {\n      if (!this.imageFile) {\n        this.status = \"Please select an image file.\";\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"image\", this.imageFile);\n      try {\n        const uploadResponse = await fetch(\"http://127.0.0.1:5000/process_image\", {\n          method: \"POST\",\n          body: formData\n        });\n        if (uploadResponse.ok) {\n          const uploadData = await uploadResponse.json();\n\n          // Ensure the server response contains the processed_image property\n          if (uploadData.processed_image) {\n            this.status = \"Image upload successful!\";\n            this.result = uploadData.processed_image;\n          } else {\n            this.status = \"Error: Processed image not received from the server.\";\n          }\n        } else {\n          const errorData = await uploadResponse.json();\n          this.status = 'Error uploading image: ${errorData.error}';\n        }\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        this.status = \"Image upload failed. Please try again.\";\n      }\n    },\n    async fetchResultImage() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/get_processed_image\");\n        if (response.ok) {\n          const resultData = await response.json();\n          this.result = resultData.processed_image;\n        } else {\n          this.status = \"Error fetching result image.\";\n        }\n      } catch (error) {\n        console.error(\"Error fetching result image:\", error);\n        this.status = \"Error fetching result image. Please try again.\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["HelloWorld","components","data","status","result","imageFile","uploadedImage","methods","handleImageUpload","event","input","target","file","files","reader","FileReader","onload","e","readAsDataURL","uploadImage","formData","FormData","append","uploadResponse","fetch","method","body","ok","uploadData","json","processed_image","errorData","error","console","fetchResultImage","response","resultData"],"sources":["/home/waseem/experiments/waseem-example-fullstack/client-/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"facial-landmark-detection\" class=\"center\">\n    <header>\n      <h1>Facial Landmark Detection</h1>\n    </header>\n\n    <main>\n      <table>\n        <tr>\n          <td>\n            <input type=\"file\" accept=\".jpg\" @change=\"handleImageUpload\" />\n          </td>\n          <td>\n            <button @click=\"uploadImage\">Upload</button>\n          </td>\n          <td>\n            <button @click=\"fetchResultImage\" :disabled=\"!result\">\n              Fetch Result\n            </button>\n          </td>\n        </tr>\n      </table>\n\n      <div v-if=\"status !== null\" class=\"status\">\n        {{ status }}\n      </div>\n\n      <canvas v-if=\"result\" ref=\"outputCanvas\" width=\"600\" height=\"400\"></canvas>\n\n      <div v-if=\"result\" class=\"result-image-container\">\n        <img :src=\"result\" alt=\"Result Image\" />\n      </div>\n\n      <!-- Include HelloWorld.vue component -->\n      <HelloWorld />\n    </main>\n\n    <footer>\n      <p>&copy; 2024 Facial Landmark Detection</p>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport HelloWorld from './App.vue';\n\nexport default {\n  components: {\n    HelloWorld,\n  },\n  data() {\n    return {\n      status: null,\n      result: null,\n      imageFile: null,\n      uploadedImage: null,\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.status = null;\n      this.result = null;\n      this.uploadedImage = null;\n\n      const input = event.target;\n      const file = input.files[0];\n\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.uploadedImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n        this.imageFile = file;\n      }\n    },\n    async uploadImage() {\n  if (!this.imageFile) {\n    this.status = \"Please select an image file.\";\n    return;\n  }\n\n  const formData = new FormData();\n  formData.append(\"image\", this.imageFile);\n\n  try {\n    const uploadResponse = await fetch(\"http://127.0.0.1:5000/process_image\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    if (uploadResponse.ok) {\n      const uploadData = await uploadResponse.json();\n\n      // Ensure the server response contains the processed_image property\n      if (uploadData.processed_image) {\n        this.status = \"Image upload successful!\";\n        this.result = uploadData.processed_image;\n      } else {\n        this.status = \"Error: Processed image not received from the server.\";\n      }\n    } else {\n      const errorData = await uploadResponse.json();\n      this.status = 'Error uploading image: ${errorData.error}';\n    }\n  } catch (error) {\n    console.error(\"Error uploading image:\", error);\n    this.status = \"Image upload failed. Please try again.\";\n  }\n},\n\n    async fetchResultImage() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/get_processed_image\");\n        if (response.ok) {\n          const resultData = await response.json();\n          this.result = resultData.processed_image;\n        } else {\n          this.status = \"Error fetching result image.\";\n        }\n      } catch (error) {\n        console.error(\"Error fetching result image:\", error);\n        this.status = \"Error fetching result image. Please try again.\";\n      }\n    },\n  },\n};\n</script>\n\n<style>\n/* Your CSS styling... */\n</style>"],"mappings":"AA4CA,OAAOA,UAAS,MAAO,WAAW;AAElC,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,IAAI;MACfC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAACC,KAAK,EAAE;MACvB,IAAI,CAACN,MAAK,GAAI,IAAI;MAClB,IAAI,CAACC,MAAK,GAAI,IAAI;MAClB,IAAI,CAACE,aAAY,GAAI,IAAI;MAEzB,MAAMI,KAAI,GAAID,KAAK,CAACE,MAAM;MAC1B,MAAMC,IAAG,GAAIF,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC;MAE3B,IAAID,IAAI,EAAE;QACR,MAAME,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAKC,CAAC,IAAK;UACrB,IAAI,CAACX,aAAY,GAAIW,CAAC,CAACN,MAAM,CAACP,MAAM;QACtC,CAAC;QACDU,MAAM,CAACI,aAAa,CAACN,IAAI,CAAC;QAC1B,IAAI,CAACP,SAAQ,GAAIO,IAAI;MACvB;IACF,CAAC;IACD,MAAMO,WAAWA,CAAA,EAAG;MACtB,IAAI,CAAC,IAAI,CAACd,SAAS,EAAE;QACnB,IAAI,CAACF,MAAK,GAAI,8BAA8B;QAC5C;MACF;MAEA,MAAMiB,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACjB,SAAS,CAAC;MAExC,IAAI;QACF,MAAMkB,cAAa,GAAI,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UACxEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QAEF,IAAIG,cAAc,CAACI,EAAE,EAAE;UACrB,MAAMC,UAAS,GAAI,MAAML,cAAc,CAACM,IAAI,CAAC,CAAC;;UAE9C;UACA,IAAID,UAAU,CAACE,eAAe,EAAE;YAC9B,IAAI,CAAC3B,MAAK,GAAI,0BAA0B;YACxC,IAAI,CAACC,MAAK,GAAIwB,UAAU,CAACE,eAAe;UAC1C,OAAO;YACL,IAAI,CAAC3B,MAAK,GAAI,sDAAsD;UACtE;QACF,OAAO;UACL,MAAM4B,SAAQ,GAAI,MAAMR,cAAc,CAACM,IAAI,CAAC,CAAC;UAC7C,IAAI,CAAC1B,MAAK,GAAI,2CAA2C;QAC3D;MACF,EAAE,OAAO6B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C,IAAI,CAAC7B,MAAK,GAAI,wCAAwC;MACxD;IACF,CAAC;IAEG,MAAM+B,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAAC,2CAA2C,CAAC;QACzE,IAAIW,QAAQ,CAACR,EAAE,EAAE;UACf,MAAMS,UAAS,GAAI,MAAMD,QAAQ,CAACN,IAAI,CAAC,CAAC;UACxC,IAAI,CAACzB,MAAK,GAAIgC,UAAU,CAACN,eAAe;QAC1C,OAAO;UACL,IAAI,CAAC3B,MAAK,GAAI,8BAA8B;QAC9C;MACF,EAAE,OAAO6B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,IAAI,CAAC7B,MAAK,GAAI,gDAAgD;MAChE;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}