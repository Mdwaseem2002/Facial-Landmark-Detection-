{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport HelloWorld from './App.vue'; // Import HelloWorld.vue\n\nexport default {\n  components: {\n    HelloWorld // Register HelloWorld component\n  },\n  data() {\n    return {\n      status: null,\n      uploadedImage: null,\n      // Store the uploaded image\n      processedImage: null,\n      // Store the processed image\n      imageFile: null\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.status = null;\n      const input = event.target;\n      this.imageFile = input.files[0];\n      // Display the uploaded image\n      this.uploadedImage = URL.createObjectURL(this.imageFile);\n    },\n    async uploadImage() {\n      if (!this.imageFile) {\n        this.status = \"Please select an image file.\";\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"image\", this.imageFile);\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/\", {\n          method: \"POST\",\n          body: formData\n        });\n        if (response.ok) {\n          this.status = \"Image upload successful!\";\n        } else {\n          this.status = \"Image upload failed. Please try again.\";\n        }\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        this.status = \"Image upload failed. Please try again.\";\n      }\n    },\n    async fetchResultImage() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/\");\n        if (response.ok) {\n          // Set the processed image\n          this.processedImage = await response.text();\n        } else {\n          console.error(\"Failed to fetch result image.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching result image:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["HelloWorld","components","data","status","uploadedImage","processedImage","imageFile","methods","handleImageUpload","event","input","target","files","URL","createObjectURL","uploadImage","formData","FormData","append","response","fetch","method","body","ok","error","console","fetchResultImage","text"],"sources":["/home/waseem/experiments/waseem-example-fullstack/client-/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"facial-landmark-detection\">\n    <header>\n      <h1>Facial Landmark Detection</h1>\n    </header>\n\n    <main>\n      <table>\n        <tr>\n          <td>\n            <input type=\"file\" accept=\".jpg\" @change=\"handleImageUpload\" />\n          </td>\n          <td>\n            <button @click=\"uploadImage\">Upload</button>\n          </td>\n          <td>\n            <button @click=\"fetchResultImage\">Fetch Result</button>\n          </td>\n        </tr>\n      </table>\n\n      <div v-if=\"status !== null\" class=\"status\">\n        {{ status }}\n      </div>\n\n      <!-- Display the uploaded image -->\n      <div v-if=\"uploadedImage\" class=\"uploaded-image-container\">\n        <img :src=\"uploadedImage\" alt=\"Uploaded Image\" />\n      </div>\n\n      <!-- Display the processed image -->\n      <div v-if=\"processedImage\" class=\"processed-image-container\">\n        <img :src=\"processedImage\" alt=\"Processed Image\" />\n      </div>\n\n      <!-- Include HelloWorld.vue component -->\n      <HelloWorld />\n    </main>\n\n    <footer>\n      <p>&copy; 2024 Facial Landmark Detection</p>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport HelloWorld from './App.vue'; // Import HelloWorld.vue\n\nexport default {\n  components: {\n    HelloWorld, // Register HelloWorld component\n  },\n  data() {\n    return {\n      status: null,\n      uploadedImage: null, // Store the uploaded image\n      processedImage: null, // Store the processed image\n      imageFile: null,\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.status = null;\n      const input = event.target;\n      this.imageFile = input.files[0];\n      // Display the uploaded image\n      this.uploadedImage = URL.createObjectURL(this.imageFile);\n    },\n    async uploadImage() {\n      if (!this.imageFile) {\n        this.status = \"Please select an image file.\";\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append(\"image\", this.imageFile);\n\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/\", {\n          method: \"POST\",\n          body: formData,\n        });\n        if (response.ok) {\n          this.status = \"Image upload successful!\";\n        } else {\n          this.status = \"Image upload failed. Please try again.\";\n        }\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        this.status = \"Image upload failed. Please try again.\";\n      }\n    },\n    async fetchResultImage() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/\");\n        if (response.ok) {\n          // Set the processed image\n          this.processedImage = await response.text();\n        } else {\n          console.error(\"Failed to fetch result image.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching result image:\", error);\n      }\n    },\n  },\n};\n</script>\n\n<style>\n/* Add your CSS styling here */\nheader {\n  background-color: #333;\n  color: #fff;\n  text-align: center;\n  padding: 10px;\n}\n\nfooter {\n  background-color: #333;\n  color: #fff;\n  text-align: center;\n  padding: 10px;\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n}\n\nmain {\n  margin: 20px;\n}\n\ntable {\n  margin-bottom: 20px;\n}\n\n.status {\n  margin-top: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  background-color: #f0f0f0;\n}\n\n.uploaded-image-container {\n  margin-top: 20px;\n}\n\n.processed-image-container {\n  margin-top: 20px;\n}\n\n.uploaded-image-container img,\n.processed-image-container img {\n  max-width: 100%;\n  height: auto;\n}\n</style>\n"],"mappings":";;;AA8CA,OAAOA,UAAS,MAAO,WAAW,EAAE;;AAEpC,eAAe;EACbC,UAAU,EAAE;IACVD,UAAU,CAAE;EACd,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI;MACZC,aAAa,EAAE,IAAI;MAAE;MACrBC,cAAc,EAAE,IAAI;MAAE;MACtBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAACC,KAAK,EAAE;MACvB,IAAI,CAACN,MAAK,GAAI,IAAI;MAClB,MAAMO,KAAI,GAAID,KAAK,CAACE,MAAM;MAC1B,IAAI,CAACL,SAAQ,GAAII,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;MAC/B;MACA,IAAI,CAACR,aAAY,GAAIS,GAAG,CAACC,eAAe,CAAC,IAAI,CAACR,SAAS,CAAC;IAC1D,CAAC;IACD,MAAMS,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACT,SAAS,EAAE;QACnB,IAAI,CAACH,MAAK,GAAI,8BAA8B;QAC5C;MACF;MAEA,MAAMa,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACZ,SAAS,CAAC;MAExC,IAAI;QACF,MAAMa,QAAO,GAAI,MAAMC,KAAK,CAAC,wBAAwB,EAAE;UACrDC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QACF,IAAIG,QAAQ,CAACI,EAAE,EAAE;UACf,IAAI,CAACpB,MAAK,GAAI,0BAA0B;QAC1C,OAAO;UACL,IAAI,CAACA,MAAK,GAAI,wCAAwC;QACxD;MACF,EAAE,OAAOqB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C,IAAI,CAACrB,MAAK,GAAI,wCAAwC;MACxD;IACF,CAAC;IACD,MAAMuB,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMP,QAAO,GAAI,MAAMC,KAAK,CAAC,wBAAwB,CAAC;QACtD,IAAID,QAAQ,CAACI,EAAE,EAAE;UACf;UACA,IAAI,CAAClB,cAAa,GAAI,MAAMc,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAC7C,OAAO;UACLF,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAC;QAChD;MACF,EAAE,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}